Terminals which are not used

   DERFUNC
   EQUATION
   ':'
   '%'


Grammar

    0 $accept: top $end

    1 top: all
    2    | error

    3 all: /* empty */
    4    | all model
    5    | all locallist
    6    | all define1
    7    | all declare

    8 @1: /* empty */

    9 all: all MODEL_LEVEL INTEGER @1 declare

   10 @2: /* empty */

   11 all: all @2 proc
   12    | all VERBATIM
   13    | all COMMENT
   14    | all uniton
   15    | all INCLUDE1 STRING

   16 model: MODEL line

   17 line: /* empty */

   18 define1: DEFINE1 NAME INTEGER
   19        | DEFINE1 error

   20 Name: NAME

   21 declare: parmblk
   22        | indepblk
   23        | depblk
   24        | stateblk
   25        | stepblk
   26        | plotdecl
   27        | neuronblk
   28        | unitblk
   29        | constblk

   30 parmblk: PARAMETER '{' parmbody '}'

   31 parmbody: /* empty */
   32         | parmbody parmasgn

   33 parmasgn: NAME '=' number units limits
   34         | NAME units limits
   35         | NAME '[' integer ']' units limits
   36         | error

   37 units: /* empty */
   38      | unit

   39 @3: /* empty */

   40 unit: '(' @3 ')'

   41 uniton: UNITSON
   42       | UNITSOFF

   43 limits: /* empty */
   44       | LT real ',' real GT

   45 stepblk: STEPPED '{' stepbdy '}'

   46 stepbdy: /* empty */
   47        | stepbdy stepped

   48 stepped: NAME '=' numlist units

   49 numlist: number ',' number
   50        | numlist ',' number

   51 name: Name
   52     | PRIME

   53 number: NUMBER
   54       | '-' NUMBER

   55 NUMBER: integer
   56       | REAL

   57 integer: INTEGER
   58        | DEFINEDVAR

   59 real: REAL
   60     | integer

   61 indepblk: INDEPENDENT '{' indepbody '}'

   62 indepbody: /* empty */
   63          | indepbody indepdef

   64 @4: /* empty */

   65 indepbody: indepbody SWEEP @4 indepdef

   66 indepdef: NAME FROM number TO number withby integer opstart units
   67         | error

   68 withby: WITH

   69 @5: /* empty */

   70 depblk: DEPENDENT @5 '{' depbody '}'

   71 depbody: /* empty */
   72        | depbody depdef

   73 depdef: name opstart units abstol
   74       | name '[' integer ']' opstart units abstol
   75       | name FROM number TO number opstart units abstol
   76       | name '[' integer ']' FROM number TO number opstart units abstol
   77       | error

   78 opstart: /* empty */
   79        | START1 number

   80 abstol: /* empty */
   81       | LT real GT

   82 @6: /* empty */

   83 stateblk: STATE @6 '{' depbody '}'

   84 plotdecl: PLOT pvlist VS name optindex
   85         | PLOT error

   86 pvlist: name optindex
   87       | pvlist ',' name optindex

   88 optindex: /* empty */
   89         | '[' INTEGER ']'

   90 @7: /* empty */

   91 proc: @7 initblk

   92 @8: /* empty */

   93 proc: @8 derivblk

   94 @9: /* empty */

   95 proc: @9 brkptblk

   96 @10: /* empty */

   97 proc: @10 linblk

   98 @11: /* empty */

   99 proc: @11 nonlinblk

  100 @12: /* empty */

  101 proc: @12 funcblk

  102 @13: /* empty */

  103 proc: @13 procedblk

  104 @14: /* empty */

  105 proc: @14 netrecblk

  106 @15: /* empty */

  107 proc: @15 terminalblk

  108 @16: /* empty */

  109 proc: @16 discretblk

  110 @17: /* empty */

  111 proc: @17 partialblk

  112 @18: /* empty */

  113 proc: @18 kineticblk

  114 @19: /* empty */

  115 proc: @19 constructblk

  116 @20: /* empty */

  117 proc: @20 destructblk

  118 @21: /* empty */

  119 proc: @21 functableblk

  120 @22: /* empty */

  121 proc: @22 BEFORE bablk

  122 @23: /* empty */

  123 proc: @23 AFTER bablk

  124 initblk: INITIAL1 stmtlist '}'

  125 constructblk: CONSTRUCTOR stmtlist '}'

  126 destructblk: DESTRUCTOR stmtlist '}'

  127 @24: /* empty */

  128 stmtlist: '{' @24 stmtlist1
  129         | '{' locallist stmtlist1

  130 conducthint: CONDUCTANCE Name
  131            | CONDUCTANCE Name USEION NAME

  132 @25: /* empty */

  133 locallist: LOCAL @25 locallist1
  134          | LOCAL error

  135 locallist1: NAME locoptarray
  136           | locallist1 ',' NAME locoptarray

  137 locoptarray: /* empty */
  138            | '[' integer ']'

  139 stmtlist1: /* empty */

  140 @26: /* empty */

  141 stmtlist1: stmtlist1 @26 ostmt
  142          | stmtlist1 astmt

  143 ostmt: fromstmt
  144      | forallstmt
  145      | whilestmt
  146      | ifstmt
  147      | stmtlist '}'
  148      | solveblk
  149      | conducthint
  150      | VERBATIM
  151      | COMMENT
  152      | sens
  153      | compart
  154      | ldifus
  155      | conserve
  156      | lagstmt
  157      | queuestmt
  158      | RESET
  159      | matchblk
  160      | pareqn
  161      | tablestmt
  162      | uniton
  163      | initstmt
  164      | watchstmt
  165      | fornetcon
  166      | NRNMUTEXLOCK
  167      | NRNMUTEXUNLOCK
  168      | error

  169 astmt: asgn

  170 @27: /* empty */

  171 astmt: PROTECT @27 asgn

  172 @28: /* empty */

  173 astmt: @28 reaction
  174      | funccall

  175 asgn: varname '=' expr
  176     | nonlineqn expr '=' expr
  177     | lineqn leftlinexpr '=' linexpr

  178 varname: name
  179        | name '[' intexpr ']'
  180        | NAME '@' integer
  181        | NAME '@' integer '[' intexpr ']'

  182 intexpr: Name
  183        | integer
  184        | '(' intexpr ')'
  185        | intexpr '+' intexpr
  186        | intexpr '-' intexpr
  187        | intexpr '*' intexpr
  188        | intexpr '/' intexpr
  189        | error

  190 expr: varname
  191     | real units
  192     | funccall
  193     | '(' expr ')'
  194     | expr '+' expr
  195     | expr '-' expr
  196     | expr '*' expr
  197     | expr '/' expr
  198     | expr '^' expr
  199     | expr OR expr
  200     | expr AND expr
  201     | expr GT expr
  202     | expr LT expr
  203     | expr GE expr
  204     | expr LE expr
  205     | expr EQ expr
  206     | expr NE expr
  207     | NOT expr
  208     | '-' expr
  209     | error

  210 nonlineqn: NONLIN1

  211 lineqn: LIN1

  212 leftlinexpr: linexpr

  213 linexpr: primary
  214        | '-' primary
  215        | linexpr '+' primary
  216        | linexpr '-' primary

  217 primary: term
  218        | primary '*' term
  219        | primary '/' term

  220 term: varname
  221     | real
  222     | funccall
  223     | '(' expr ')'
  224     | error

  225 @29: /* empty */

  226 funccall: NAME '(' @29 exprlist ')'

  227 exprlist: /* empty */
  228         | expr
  229         | STRING
  230         | exprlist ',' expr
  231         | exprlist ',' STRING

  232 @30: /* empty */

  233 fromstmt: FROM NAME @30 '=' intexpr TO intexpr opinc stmtlist '}'
  234         | FROM error

  235 opinc: /* empty */
  236      | BY intexpr

  237 @31: /* empty */

  238 forallstmt: FORALL1 NAME @31 stmtlist '}'
  239           | FORALL1 error

  240 whilestmt: WHILE '(' expr ')' stmtlist '}'

  241 ifstmt: IF '(' expr ')' stmtlist '}' optelseif optelse

  242 optelseif: /* empty */
  243          | optelseif ELSE IF '(' expr ')' stmtlist '}'

  244 optelse: /* empty */
  245        | ELSE stmtlist '}'

  246 derivblk: DERIVATIVE NAME stmtlist '}'

  247 @32: /* empty */

  248 linblk: LINEAR NAME solvefor @32 stmtlist '}'

  249 nonlinblk: NONLINEAR NAME solvefor stmtlist '}'

  250 discretblk: DISCRETE NAME stmtlist '}'

  251 partialblk: PARTIAL NAME stmtlist '}'
  252           | PARTIAL error

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 '(' NAME ')' '+' NAME
  254       | '~' DEL NAME '[' firstlast ']' '=' expr
  255       | '~' NAME '[' firstlast ']' '=' expr

  256 firstlast: FIRST
  257          | LAST

  258 functableblk: FUNCTION_TABLE NAME '(' arglist ')' units

  259 @33: /* empty */

  260 funcblk: FUNCTION1 NAME '(' arglist ')' units @33 stmtlist '}'

  261 arglist: /* empty */

  262 @34: /* empty */

  263 arglist: @34 arglist1

  264 arglist1: name units
  265         | arglist1 ',' name units

  266 procedblk: PROCEDURE NAME '(' arglist ')' units stmtlist '}'

  267 @35: /* empty */

  268 netrecblk: NETRECEIVE '(' arglist ')' @35 stmtlist '}'
  269          | NETRECEIVE error

  270 initstmt: INITIAL1 stmtlist '}'

  271 solveblk: SOLVE NAME ifsolerr
  272         | SOLVE NAME USING METHOD ifsolerr
  273         | SOLVE error

  274 ifsolerr: /* empty */
  275         | IFERROR stmtlist '}'

  276 solvefor: /* empty */
  277         | solvefor1

  278 solvefor1: SOLVEFOR NAME
  279          | solvefor1 ',' NAME
  280          | SOLVEFOR error

  281 brkptblk: BREAKPOINT stmtlist '}'

  282 terminalblk: TERMINAL stmtlist '}'

  283 bablk: BREAKPOINT stmtlist '}'
  284      | SOLVE stmtlist '}'
  285      | INITIAL1 stmtlist '}'
  286      | STEP stmtlist '}'
  287      | error

  288 watchstmt: WATCH watch1
  289          | watchstmt ',' watch1
  290          | WATCH error

  291 watch1: '(' aexpr watchdir aexpr ')' real

  292 watchdir: GT
  293         | LT

  294 @36: /* empty */

  295 fornetcon: FOR_NETCONS '(' arglist ')' @36 stmtlist '}'
  296          | FOR_NETCONS error

  297 aexpr: varname
  298      | real units
  299      | funccall
  300      | '(' aexpr ')'
  301      | aexpr '+' aexpr
  302      | aexpr '-' aexpr
  303      | aexpr '*' aexpr
  304      | aexpr '/' aexpr
  305      | aexpr '^' aexpr
  306      | '-' aexpr
  307      | error

  308 sens: SENS senslist
  309     | SENS error

  310 senslist: varname
  311         | senslist ',' varname

  312 @37: /* empty */

  313 conserve: CONSERVE @37 react '=' expr
  314         | CONSERVE error

  315 @38: /* empty */

  316 compart: COMPARTMENT NAME ',' @38 expr '{' namelist '}'
  317        | COMPARTMENT expr '{' namelist '}'

  318 @39: /* empty */

  319 ldifus: LONGDIFUS NAME ',' @39 expr '{' namelist '}'
  320       | LONGDIFUS expr '{' namelist '}'

  321 namelist: NAME
  322         | namelist NAME

  323 kineticblk: KINETIC NAME solvefor stmtlist '}'

  324 @40: /* empty */

  325 reaction: REACTION react REACT1 @40 react '(' expr ',' expr ')'
  326         | REACTION react LT LT '(' expr ')'
  327         | REACTION react '-' GT '(' expr ')'
  328         | REACTION error

  329 react: varname
  330      | integer varname
  331      | react '+' varname
  332      | react '+' integer varname

  333 lagstmt: LAG name BY NAME
  334        | LAG error

  335 queuestmt: PUTQ name
  336          | GETQ name

  337 @41: /* empty */

  338 matchblk: MATCH @41 '{' matchlist '}'

  339 matchlist: match
  340          | matchlist match

  341 match: name
  342      | matchname '(' expr ')' '=' expr
  343      | error

  344 matchname: name
  345          | name '[' NAME ']'

  346 unitblk: UNITS '{' unitbody '}'

  347 unitbody: /* empty */
  348         | unitbody unitdef
  349         | unitbody factordef

  350 unitdef: unit '=' unit
  351        | unit error

  352 factordef: NAME '=' real unit
  353          | NAME '=' unit unit
  354          | NAME '=' unit '-' GT unit
  355          | error

  356 constblk: CONSTANT '{' conststmt '}'

  357 conststmt: /* empty */
  358          | conststmt NAME '=' number units

  359 tablestmt: TABLE tablst dependlst FROM expr TO expr WITH INTEGER
  360          | TABLE error

  361 tablst: /* empty */
  362       | tablst1

  363 tablst1: Name
  364        | tablst1 ',' Name

  365 dependlst: /* empty */
  366          | DEPEND tablst1

  367 neuronblk: NEURON '{' nrnstmt '}'

  368 nrnstmt: /* empty */
  369        | nrnstmt SUFFIX NAME
  370        | nrnstmt nrnuse
  371        | nrnstmt NONSPECIFIC nrnlist
  372        | nrnstmt ELECTRODE_CURRENT nrnlist
  373        | nrnstmt SECTION nrnlist
  374        | nrnstmt RANGE nrnlist
  375        | nrnstmt GLOBAL nrnlist
  376        | nrnstmt POINTER nrnlist
  377        | nrnstmt EXTERNAL nrnlist
  378        | nrnstmt THREADSAFE optnrnlist

  379 nrnuse: USEION NAME READ nrnlist valence
  380       | USEION NAME WRITE nrnlist valence
  381       | USEION NAME READ nrnlist WRITE nrnlist valence
  382       | USEION error

  383 nrnlist: NAME
  384        | nrnlist ',' NAME
  385        | error

  386 optnrnlist: /* empty */
  387           | nrnlist

  388 valence: /* empty */
  389        | VALENCE real
  390        | VALENCE '-' real


Terminals, with rules where they appear

$end (0) 0
'%' (37)
'(' (40) 40 184 193 223 226 240 241 243 253 258 260 266 268 291 295
    300 325 326 327 342
')' (41) 40 184 193 223 226 240 241 243 253 258 260 266 268 291 295
    300 325 326 327 342
'*' (42) 187 196 218 253 303
'+' (43) 185 194 215 253 301 331 332
',' (44) 44 49 50 87 136 230 231 265 279 289 311 316 319 325 364 384
'-' (45) 54 186 195 208 214 216 302 306 327 354 390
'/' (47) 188 197 219 304
':' (58)
'=' (61) 33 48 175 176 177 233 253 254 255 313 342 350 352 353 354
    358
'@' (64) 180 181
'[' (91) 35 74 76 89 138 179 181 254 255 345
']' (93) 35 74 76 89 138 179 181 254 255 345
'^' (94) 198 305
'{' (123) 30 45 61 70 83 128 129 316 317 319 320 338 346 356 367
'}' (125) 30 45 61 70 83 124 125 126 147 233 238 240 241 243 245 246
    248 249 250 251 260 266 268 270 275 281 282 283 284 285 286 295
    316 317 319 320 323 338 346 356 367
'~' (126) 253 254 255
error (256) 2 19 36 67 77 85 134 168 189 209 224 234 239 252 269 273
    280 287 290 296 307 309 314 328 334 343 351 355 360 382 385
VERBATIM (258) 12 150
COMMENT (259) 13 151
MODEL (260) 16
CONSTANT (261) 356
INDEPENDENT (262) 61
DEPENDENT (263) 70
STATE (264) 83
INITIAL1 (265) 124 270 285
DERIVATIVE (266) 246
SOLVE (267) 271 272 273 284
USING (268) 272
WITH (269) 68 359
STEPPED (270) 45
DISCRETE (271) 250
FROM (272) 66 75 76 233 234 359
FORALL1 (273) 238 239
TO (274) 66 75 76 233 359
BY (275) 236 333
WHILE (276) 240
IF (277) 241 243
ELSE (278) 243 245
START1 (279) 79
STEP (280) 286
SENS (281) 308 309
SOLVEFOR (282) 278 280
PROCEDURE (283) 266
PARTIAL (284) 251 252
DEL (285) 254
DEL2 (286) 253
DEFINE1 (287) 18 19
IFERROR (288) 275
PARAMETER (289) 30
DERFUNC (290)
EQUATION (291)
TERMINAL (292) 282
LINEAR (293) 248
NONLINEAR (294) 249
FUNCTION1 (295) 260
LOCAL (296) 133 134
METHOD (297) 272
LIN1 (298) 211
NONLIN1 (299) 210
PUTQ (300) 335
GETQ (301) 336
TABLE (302) 359 360
DEPEND (303) 366
BREAKPOINT (304) 281 283
INCLUDE1 (305) 15
FUNCTION_TABLE (306) 258
PROTECT (307) 171
NRNMUTEXLOCK (308) 166
NRNMUTEXUNLOCK (309) 167
OR (310) 199
AND (311) 200
GT (312) 44 81 201 292 327 354
LT (313) 44 81 202 293 326
LE (314) 204
EQ (315) 205
NE (316) 206
NOT (317) 207
NAME (318) 18 20 33 34 35 48 66 131 135 136 180 181 226 233 238 246
    248 249 250 251 253 254 255 258 260 266 271 272 278 279 316 319
    321 322 323 333 345 352 353 354 358 369 379 380 381 383 384
PRIME (319) 52 253
REAL (320) 56 59
INTEGER (321) 9 18 57 89 359
DEFINEDVAR (322) 58
STRING (323) 15 229 231
PLOT (324) 84 85
VS (325) 84
LAG (326) 333 334
RESET (327) 158
MATCH (328) 338
MODEL_LEVEL (329) 9
SWEEP (330) 65
FIRST (331) 256
LAST (332) 257
KINETIC (333) 323
CONSERVE (334) 313 314
REACTION (335) 325 326 327 328
REACT1 (336) 325
COMPARTMENT (337) 316 317
UNITS (338) 346
UNITSON (339) 41
UNITSOFF (340) 42
LONGDIFUS (341) 319 320
NEURON (342) 367
SUFFIX (343) 369
NONSPECIFIC (344) 371
READ (345) 379 381
WRITE (346) 380 381
USEION (347) 131 379 380 381 382
VALENCE (348) 389 390
THREADSAFE (349) 378
GLOBAL (350) 375
SECTION (351) 373
RANGE (352) 374
POINTER (353) 376
EXTERNAL (354) 377
BEFORE (355) 121
AFTER (356) 123
WATCH (357) 288 290
ELECTRODE_CURRENT (358) 372
CONSTRUCTOR (359) 125
DESTRUCTOR (360) 126
NETRECEIVE (361) 268 269
FOR_NETCONS (362) 295 296
CONDUCTANCE (363) 130 131
GE (364) 203
UNARYMINUS (365)


Nonterminals, with rules where they appear

$accept (128)
    on left: 0
top (129)
    on left: 1 2, on right: 0
all (130)
    on left: 3 4 5 6 7 9 11 12 13 14 15, on right: 1 4 5 6 7 9 11 12
    13 14 15
@1 (131)
    on left: 8, on right: 9
@2 (132)
    on left: 10, on right: 11
model (133)
    on left: 16, on right: 4
line (134)
    on left: 17, on right: 16
define1 (135)
    on left: 18 19, on right: 6
Name (136)
    on left: 20, on right: 51 130 131 182 363 364
declare (137)
    on left: 21 22 23 24 25 26 27 28 29, on right: 7 9
parmblk (138)
    on left: 30, on right: 21
parmbody (139)
    on left: 31 32, on right: 30 32
parmasgn (140)
    on left: 33 34 35 36, on right: 32
units (141)
    on left: 37 38, on right: 33 34 35 48 66 73 74 75 76 191 258 260
    264 265 266 298 358
unit (142)
    on left: 40, on right: 38 350 351 352 353 354
@3 (143)
    on left: 39, on right: 40
uniton (144)
    on left: 41 42, on right: 14 162
limits (145)
    on left: 43 44, on right: 33 34 35
stepblk (146)
    on left: 45, on right: 25
stepbdy (147)
    on left: 46 47, on right: 45 47
stepped (148)
    on left: 48, on right: 47
numlist (149)
    on left: 49 50, on right: 48 50
name (150)
    on left: 51 52, on right: 73 74 75 76 84 86 87 178 179 264 265
    333 335 336 341 344 345
number (151)
    on left: 53 54, on right: 33 49 50 66 75 76 79 358
NUMBER (152)
    on left: 55 56, on right: 53 54
integer (153)
    on left: 57 58, on right: 35 55 60 66 74 76 138 180 181 183 330
    332
real (154)
    on left: 59 60, on right: 44 81 191 221 291 298 352 389 390
indepblk (155)
    on left: 61, on right: 22
indepbody (156)
    on left: 62 63 65, on right: 61 63 65
@4 (157)
    on left: 64, on right: 65
indepdef (158)
    on left: 66 67, on right: 63 65
withby (159)
    on left: 68, on right: 66
depblk (160)
    on left: 70, on right: 23
@5 (161)
    on left: 69, on right: 70
depbody (162)
    on left: 71 72, on right: 70 72 83
depdef (163)
    on left: 73 74 75 76 77, on right: 72
opstart (164)
    on left: 78 79, on right: 66 73 74 75 76
abstol (165)
    on left: 80 81, on right: 73 74 75 76
stateblk (166)
    on left: 83, on right: 24
@6 (167)
    on left: 82, on right: 83
plotdecl (168)
    on left: 84 85, on right: 26
pvlist (169)
    on left: 86 87, on right: 84 87
optindex (170)
    on left: 88 89, on right: 84 86 87
proc (171)
    on left: 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119
    121 123, on right: 11
@7 (172)
    on left: 90, on right: 91
@8 (173)
    on left: 92, on right: 93
@9 (174)
    on left: 94, on right: 95
@10 (175)
    on left: 96, on right: 97
@11 (176)
    on left: 98, on right: 99
@12 (177)
    on left: 100, on right: 101
@13 (178)
    on left: 102, on right: 103
@14 (179)
    on left: 104, on right: 105
@15 (180)
    on left: 106, on right: 107
@16 (181)
    on left: 108, on right: 109
@17 (182)
    on left: 110, on right: 111
@18 (183)
    on left: 112, on right: 113
@19 (184)
    on left: 114, on right: 115
@20 (185)
    on left: 116, on right: 117
@21 (186)
    on left: 118, on right: 119
@22 (187)
    on left: 120, on right: 121
@23 (188)
    on left: 122, on right: 123
initblk (189)
    on left: 124, on right: 91
constructblk (190)
    on left: 125, on right: 115
destructblk (191)
    on left: 126, on right: 117
stmtlist (192)
    on left: 128 129, on right: 124 125 126 147 233 238 240 241 243
    245 246 248 249 250 251 260 266 268 270 275 281 282 283 284 285
    286 295 323
@24 (193)
    on left: 127, on right: 128
conducthint (194)
    on left: 130 131, on right: 149
locallist (195)
    on left: 133 134, on right: 5 129
@25 (196)
    on left: 132, on right: 133
locallist1 (197)
    on left: 135 136, on right: 133 136
locoptarray (198)
    on left: 137 138, on right: 135 136
stmtlist1 (199)
    on left: 139 141 142, on right: 128 129 141 142
@26 (200)
    on left: 140, on right: 141
ostmt (201)
    on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156
    157 158 159 160 161 162 163 164 165 166 167 168,
    on right: 141
astmt (202)
    on left: 169 171 173 174, on right: 142
@27 (203)
    on left: 170, on right: 171
@28 (204)
    on left: 172, on right: 173
asgn (205)
    on left: 175 176 177, on right: 169 171
varname (206)
    on left: 178 179 180 181, on right: 175 190 220 297 310 311 329
    330 331 332
intexpr (207)
    on left: 182 183 184 185 186 187 188 189, on right: 179 181 184
    185 186 187 188 233 236
expr (208)
    on left: 190 191 192 193 194 195 196 197 198 199 200 201 202 203
    204 205 206 207 208 209, on right: 175 176 193 194 195 196 197
    198 199 200 201 202 203 204 205 206 207 208 223 228 230 240 241
    243 254 255 313 316 317 319 320 325 326 327 342 359
nonlineqn (209)
    on left: 210, on right: 176
lineqn (210)
    on left: 211, on right: 177
leftlinexpr (211)
    on left: 212, on right: 177
linexpr (212)
    on left: 213 214 215 216, on right: 177 212 215 216
primary (213)
    on left: 217 218 219, on right: 213 214 215 216 218 219
term (214)
    on left: 220 221 222 223 224, on right: 217 218 219
funccall (215)
    on left: 226, on right: 174 192 222 299
@29 (216)
    on left: 225, on right: 226
exprlist (217)
    on left: 227 228 229 230 231, on right: 226 230 231
fromstmt (218)
    on left: 233 234, on right: 143
@30 (219)
    on left: 232, on right: 233
opinc (220)
    on left: 235 236, on right: 233
forallstmt (221)
    on left: 238 239, on right: 144
@31 (222)
    on left: 237, on right: 238
whilestmt (223)
    on left: 240, on right: 145
ifstmt (224)
    on left: 241, on right: 146
optelseif (225)
    on left: 242 243, on right: 241 243
optelse (226)
    on left: 244 245, on right: 241
derivblk (227)
    on left: 246, on right: 93
linblk (228)
    on left: 248, on right: 97
@32 (229)
    on left: 247, on right: 248
nonlinblk (230)
    on left: 249, on right: 99
discretblk (231)
    on left: 250, on right: 109
partialblk (232)
    on left: 251 252, on right: 111
pareqn (233)
    on left: 253 254 255, on right: 160
firstlast (234)
    on left: 256 257, on right: 254 255
functableblk (235)
    on left: 258, on right: 119
funcblk (236)
    on left: 260, on right: 101
@33 (237)
    on left: 259, on right: 260
arglist (238)
    on left: 261 263, on right: 258 260 266 268 295
@34 (239)
    on left: 262, on right: 263
arglist1 (240)
    on left: 264 265, on right: 263 265
procedblk (241)
    on left: 266, on right: 103
netrecblk (242)
    on left: 268 269, on right: 105
@35 (243)
    on left: 267, on right: 268
initstmt (244)
    on left: 270, on right: 163
solveblk (245)
    on left: 271 272 273, on right: 148
ifsolerr (246)
    on left: 274 275, on right: 271 272
solvefor (247)
    on left: 276 277, on right: 248 249 323
solvefor1 (248)
    on left: 278 279 280, on right: 277 279
brkptblk (249)
    on left: 281, on right: 95
terminalblk (250)
    on left: 282, on right: 107
bablk (251)
    on left: 283 284 285 286 287, on right: 121 123
watchstmt (252)
    on left: 288 289 290, on right: 164 289
watch1 (253)
    on left: 291, on right: 288 289
watchdir (254)
    on left: 292 293, on right: 291
fornetcon (255)
    on left: 295 296, on right: 165
@36 (256)
    on left: 294, on right: 295
aexpr (257)
    on left: 297 298 299 300 301 302 303 304 305 306 307,
    on right: 291 300 301 302 303 304 305 306
sens (258)
    on left: 308 309, on right: 152
senslist (259)
    on left: 310 311, on right: 308 311
conserve (260)
    on left: 313 314, on right: 155
@37 (261)
    on left: 312, on right: 313
compart (262)
    on left: 316 317, on right: 153
@38 (263)
    on left: 315, on right: 316
ldifus (264)
    on left: 319 320, on right: 154
@39 (265)
    on left: 318, on right: 319
namelist (266)
    on left: 321 322, on right: 316 317 319 320 322
kineticblk (267)
    on left: 323, on right: 113
reaction (268)
    on left: 325 326 327 328, on right: 173
@40 (269)
    on left: 324, on right: 325
react (270)
    on left: 329 330 331 332, on right: 313 325 326 327 331 332
lagstmt (271)
    on left: 333 334, on right: 156
queuestmt (272)
    on left: 335 336, on right: 157
matchblk (273)
    on left: 338, on right: 159
@41 (274)
    on left: 337, on right: 338
matchlist (275)
    on left: 339 340, on right: 338 340
match (276)
    on left: 341 342 343, on right: 339 340
matchname (277)
    on left: 344 345, on right: 342
unitblk (278)
    on left: 346, on right: 28
unitbody (279)
    on left: 347 348 349, on right: 346 348 349
unitdef (280)
    on left: 350 351, on right: 348
factordef (281)
    on left: 352 353 354 355, on right: 349
constblk (282)
    on left: 356, on right: 29
conststmt (283)
    on left: 357 358, on right: 356 358
tablestmt (284)
    on left: 359 360, on right: 161
tablst (285)
    on left: 361 362, on right: 359
tablst1 (286)
    on left: 363 364, on right: 362 364 366
dependlst (287)
    on left: 365 366, on right: 359
neuronblk (288)
    on left: 367, on right: 27
nrnstmt (289)
    on left: 368 369 370 371 372 373 374 375 376 377 378,
    on right: 367 369 370 371 372 373 374 375 376 377 378
nrnuse (290)
    on left: 379 380 381 382, on right: 370
nrnlist (291)
    on left: 383 384 385, on right: 371 372 373 374 375 376 377 379
    380 381 384 387
optnrnlist (292)
    on left: 386 387, on right: 378
valence (293)
    on left: 388 389 390, on right: 379 380 381


state 0

    0 $accept: . top $end

    error  shift, and go to state 1

    $end            reduce using rule 3 (all)
    VERBATIM        reduce using rule 3 (all)
    COMMENT         reduce using rule 3 (all)
    MODEL           reduce using rule 3 (all)
    CONSTANT        reduce using rule 3 (all)
    INDEPENDENT     reduce using rule 3 (all)
    DEPENDENT       reduce using rule 3 (all)
    STATE           reduce using rule 3 (all)
    INITIAL1        reduce using rule 3 (all)
    DERIVATIVE      reduce using rule 3 (all)
    STEPPED         reduce using rule 3 (all)
    DISCRETE        reduce using rule 3 (all)
    PROCEDURE       reduce using rule 3 (all)
    PARTIAL         reduce using rule 3 (all)
    DEFINE1         reduce using rule 3 (all)
    PARAMETER       reduce using rule 3 (all)
    TERMINAL        reduce using rule 3 (all)
    LINEAR          reduce using rule 3 (all)
    NONLINEAR       reduce using rule 3 (all)
    FUNCTION1       reduce using rule 3 (all)
    LOCAL           reduce using rule 3 (all)
    BREAKPOINT      reduce using rule 3 (all)
    INCLUDE1        reduce using rule 3 (all)
    FUNCTION_TABLE  reduce using rule 3 (all)
    PLOT            reduce using rule 3 (all)
    MODEL_LEVEL     reduce using rule 3 (all)
    KINETIC         reduce using rule 3 (all)
    UNITS           reduce using rule 3 (all)
    UNITSON         reduce using rule 3 (all)
    UNITSOFF        reduce using rule 3 (all)
    NEURON          reduce using rule 3 (all)
    BEFORE          reduce using rule 3 (all)
    AFTER           reduce using rule 3 (all)
    CONSTRUCTOR     reduce using rule 3 (all)
    DESTRUCTOR      reduce using rule 3 (all)
    NETRECEIVE      reduce using rule 3 (all)

    top  go to state 2
    all  go to state 3


state 1

    2 top: error .

    $default  reduce using rule 2 (top)


state 2

    0 $accept: top . $end

    $end  shift, and go to state 4


state 3

    1 top: all .
    4 all: all . model
    5    | all . locallist
    6    | all . define1
    7    | all . declare
    9    | all . MODEL_LEVEL INTEGER @1 declare
   11    | all . @2 proc
   12    | all . VERBATIM
   13    | all . COMMENT
   14    | all . uniton
   15    | all . INCLUDE1 STRING

    VERBATIM     shift, and go to state 5
    COMMENT      shift, and go to state 6
    MODEL        shift, and go to state 7
    CONSTANT     shift, and go to state 8
    INDEPENDENT  shift, and go to state 9
    DEPENDENT    shift, and go to state 10
    STATE        shift, and go to state 11
    STEPPED      shift, and go to state 12
    DEFINE1      shift, and go to state 13
    PARAMETER    shift, and go to state 14
    LOCAL        shift, and go to state 15
    INCLUDE1     shift, and go to state 16
    PLOT         shift, and go to state 17
    MODEL_LEVEL  shift, and go to state 18
    UNITS        shift, and go to state 19
    UNITSON      shift, and go to state 20
    UNITSOFF     shift, and go to state 21
    NEURON       shift, and go to state 22

    $end      reduce using rule 1 (top)
    $default  reduce using rule 10 (@2)

    @2         go to state 23
    model      go to state 24
    define1    go to state 25
    declare    go to state 26
    parmblk    go to state 27
    uniton     go to state 28
    stepblk    go to state 29
    indepblk   go to state 30
    depblk     go to state 31
    stateblk   go to state 32
    plotdecl   go to state 33
    locallist  go to state 34
    unitblk    go to state 35
    constblk   go to state 36
    neuronblk  go to state 37


state 4

    0 $accept: top $end .

    $default  accept


state 5

   12 all: all VERBATIM .

    $default  reduce using rule 12 (all)


state 6

   13 all: all COMMENT .

    $default  reduce using rule 13 (all)


state 7

   16 model: MODEL . line

    $default  reduce using rule 17 (line)

    line  go to state 38


state 8

  356 constblk: CONSTANT . '{' conststmt '}'

    '{'  shift, and go to state 39


state 9

   61 indepblk: INDEPENDENT . '{' indepbody '}'

    '{'  shift, and go to state 40


state 10

   70 depblk: DEPENDENT . @5 '{' depbody '}'

    $default  reduce using rule 69 (@5)

    @5  go to state 41


state 11

   83 stateblk: STATE . @6 '{' depbody '}'

    $default  reduce using rule 82 (@6)

    @6  go to state 42


state 12

   45 stepblk: STEPPED . '{' stepbdy '}'

    '{'  shift, and go to state 43


state 13

   18 define1: DEFINE1 . NAME INTEGER
   19        | DEFINE1 . error

    error  shift, and go to state 44
    NAME   shift, and go to state 45


state 14

   30 parmblk: PARAMETER . '{' parmbody '}'

    '{'  shift, and go to state 46


state 15

  133 locallist: LOCAL . @25 locallist1
  134          | LOCAL . error

    error  shift, and go to state 47

    NAME  reduce using rule 132 (@25)

    @25  go to state 48


state 16

   15 all: all INCLUDE1 . STRING

    STRING  shift, and go to state 49


state 17

   84 plotdecl: PLOT . pvlist VS name optindex
   85         | PLOT . error

    error  shift, and go to state 50
    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name    go to state 53
    name    go to state 54
    pvlist  go to state 55


state 18

    9 all: all MODEL_LEVEL . INTEGER @1 declare

    INTEGER  shift, and go to state 56


state 19

  346 unitblk: UNITS . '{' unitbody '}'

    '{'  shift, and go to state 57


state 20

   41 uniton: UNITSON .

    $default  reduce using rule 41 (uniton)


state 21

   42 uniton: UNITSOFF .

    $default  reduce using rule 42 (uniton)


state 22

  367 neuronblk: NEURON . '{' nrnstmt '}'

    '{'  shift, and go to state 58


state 23

   11 all: all @2 . proc

    DERIVATIVE      reduce using rule 92 (@8)
    DISCRETE        reduce using rule 108 (@16)
    PROCEDURE       reduce using rule 102 (@13)
    PARTIAL         reduce using rule 110 (@17)
    TERMINAL        reduce using rule 106 (@15)
    LINEAR          reduce using rule 96 (@10)
    NONLINEAR       reduce using rule 98 (@11)
    FUNCTION1       reduce using rule 100 (@12)
    BREAKPOINT      reduce using rule 94 (@9)
    FUNCTION_TABLE  reduce using rule 118 (@21)
    KINETIC         reduce using rule 112 (@18)
    BEFORE          reduce using rule 120 (@22)
    AFTER           reduce using rule 122 (@23)
    CONSTRUCTOR     reduce using rule 114 (@19)
    DESTRUCTOR      reduce using rule 116 (@20)
    NETRECEIVE      reduce using rule 104 (@14)
    $default        reduce using rule 90 (@7)

    proc  go to state 59
    @7    go to state 60
    @8    go to state 61
    @9    go to state 62
    @10   go to state 63
    @11   go to state 64
    @12   go to state 65
    @13   go to state 66
    @14   go to state 67
    @15   go to state 68
    @16   go to state 69
    @17   go to state 70
    @18   go to state 71
    @19   go to state 72
    @20   go to state 73
    @21   go to state 74
    @22   go to state 75
    @23   go to state 76


state 24

    4 all: all model .

    $default  reduce using rule 4 (all)


state 25

    6 all: all define1 .

    $default  reduce using rule 6 (all)


state 26

    7 all: all declare .

    $default  reduce using rule 7 (all)


state 27

   21 declare: parmblk .

    $default  reduce using rule 21 (declare)


state 28

   14 all: all uniton .

    $default  reduce using rule 14 (all)


state 29

   25 declare: stepblk .

    $default  reduce using rule 25 (declare)


state 30

   22 declare: indepblk .

    $default  reduce using rule 22 (declare)


state 31

   23 declare: depblk .

    $default  reduce using rule 23 (declare)


state 32

   24 declare: stateblk .

    $default  reduce using rule 24 (declare)


state 33

   26 declare: plotdecl .

    $default  reduce using rule 26 (declare)


state 34

    5 all: all locallist .

    $default  reduce using rule 5 (all)


state 35

   28 declare: unitblk .

    $default  reduce using rule 28 (declare)


state 36

   29 declare: constblk .

    $default  reduce using rule 29 (declare)


state 37

   27 declare: neuronblk .

    $default  reduce using rule 27 (declare)


state 38

   16 model: MODEL line .

    $default  reduce using rule 16 (model)


state 39

  356 constblk: CONSTANT '{' . conststmt '}'

    $default  reduce using rule 357 (conststmt)

    conststmt  go to state 77


state 40

   61 indepblk: INDEPENDENT '{' . indepbody '}'

    $default  reduce using rule 62 (indepbody)

    indepbody  go to state 78


state 41

   70 depblk: DEPENDENT @5 . '{' depbody '}'

    '{'  shift, and go to state 79


state 42

   83 stateblk: STATE @6 . '{' depbody '}'

    '{'  shift, and go to state 80


state 43

   45 stepblk: STEPPED '{' . stepbdy '}'

    $default  reduce using rule 46 (stepbdy)

    stepbdy  go to state 81


state 44

   19 define1: DEFINE1 error .

    $default  reduce using rule 19 (define1)


state 45

   18 define1: DEFINE1 NAME . INTEGER

    INTEGER  shift, and go to state 82


state 46

   30 parmblk: PARAMETER '{' . parmbody '}'

    $default  reduce using rule 31 (parmbody)

    parmbody  go to state 83


state 47

  134 locallist: LOCAL error .

    $default  reduce using rule 134 (locallist)


state 48

  133 locallist: LOCAL @25 . locallist1

    NAME  shift, and go to state 84

    locallist1  go to state 85


state 49

   15 all: all INCLUDE1 STRING .

    $default  reduce using rule 15 (all)


state 50

   85 plotdecl: PLOT error .

    $default  reduce using rule 85 (plotdecl)


state 51

   20 Name: NAME .

    $default  reduce using rule 20 (Name)


state 52

   52 name: PRIME .

    $default  reduce using rule 52 (name)


state 53

   51 name: Name .

    $default  reduce using rule 51 (name)


state 54

   86 pvlist: name . optindex

    '['  shift, and go to state 86

    $default  reduce using rule 88 (optindex)

    optindex  go to state 87


state 55

   84 plotdecl: PLOT pvlist . VS name optindex
   87 pvlist: pvlist . ',' name optindex

    ','  shift, and go to state 88
    VS   shift, and go to state 89


state 56

    9 all: all MODEL_LEVEL INTEGER . @1 declare

    $default  reduce using rule 8 (@1)

    @1  go to state 90


state 57

  346 unitblk: UNITS '{' . unitbody '}'

    $default  reduce using rule 347 (unitbody)

    unitbody  go to state 91


state 58

  367 neuronblk: NEURON '{' . nrnstmt '}'

    $default  reduce using rule 368 (nrnstmt)

    nrnstmt  go to state 92


state 59

   11 all: all @2 proc .

    $default  reduce using rule 11 (all)


state 60

   91 proc: @7 . initblk

    INITIAL1  shift, and go to state 93

    initblk  go to state 94


state 61

   93 proc: @8 . derivblk

    DERIVATIVE  shift, and go to state 95

    derivblk  go to state 96


state 62

   95 proc: @9 . brkptblk

    BREAKPOINT  shift, and go to state 97

    brkptblk  go to state 98


state 63

   97 proc: @10 . linblk

    LINEAR  shift, and go to state 99

    linblk  go to state 100


state 64

   99 proc: @11 . nonlinblk

    NONLINEAR  shift, and go to state 101

    nonlinblk  go to state 102


state 65

  101 proc: @12 . funcblk

    FUNCTION1  shift, and go to state 103

    funcblk  go to state 104


state 66

  103 proc: @13 . procedblk

    PROCEDURE  shift, and go to state 105

    procedblk  go to state 106


state 67

  105 proc: @14 . netrecblk

    NETRECEIVE  shift, and go to state 107

    netrecblk  go to state 108


state 68

  107 proc: @15 . terminalblk

    TERMINAL  shift, and go to state 109

    terminalblk  go to state 110


state 69

  109 proc: @16 . discretblk

    DISCRETE  shift, and go to state 111

    discretblk  go to state 112


state 70

  111 proc: @17 . partialblk

    PARTIAL  shift, and go to state 113

    partialblk  go to state 114


state 71

  113 proc: @18 . kineticblk

    KINETIC  shift, and go to state 115

    kineticblk  go to state 116


state 72

  115 proc: @19 . constructblk

    CONSTRUCTOR  shift, and go to state 117

    constructblk  go to state 118


state 73

  117 proc: @20 . destructblk

    DESTRUCTOR  shift, and go to state 119

    destructblk  go to state 120


state 74

  119 proc: @21 . functableblk

    FUNCTION_TABLE  shift, and go to state 121

    functableblk  go to state 122


state 75

  121 proc: @22 . BEFORE bablk

    BEFORE  shift, and go to state 123


state 76

  123 proc: @23 . AFTER bablk

    AFTER  shift, and go to state 124


state 77

  356 constblk: CONSTANT '{' conststmt . '}'
  358 conststmt: conststmt . NAME '=' number units

    '}'   shift, and go to state 125
    NAME  shift, and go to state 126


state 78

   61 indepblk: INDEPENDENT '{' indepbody . '}'
   63 indepbody: indepbody . indepdef
   65          | indepbody . SWEEP @4 indepdef

    error  shift, and go to state 127
    '}'    shift, and go to state 128
    NAME   shift, and go to state 129
    SWEEP  shift, and go to state 130

    indepdef  go to state 131


state 79

   70 depblk: DEPENDENT @5 '{' . depbody '}'

    $default  reduce using rule 71 (depbody)

    depbody  go to state 132


state 80

   83 stateblk: STATE @6 '{' . depbody '}'

    $default  reduce using rule 71 (depbody)

    depbody  go to state 133


state 81

   45 stepblk: STEPPED '{' stepbdy . '}'
   47 stepbdy: stepbdy . stepped

    '}'   shift, and go to state 134
    NAME  shift, and go to state 135

    stepped  go to state 136


state 82

   18 define1: DEFINE1 NAME INTEGER .

    $default  reduce using rule 18 (define1)


state 83

   30 parmblk: PARAMETER '{' parmbody . '}'
   32 parmbody: parmbody . parmasgn

    error  shift, and go to state 137
    '}'    shift, and go to state 138
    NAME   shift, and go to state 139

    parmasgn  go to state 140


state 84

  135 locallist1: NAME . locoptarray

    '['  shift, and go to state 141

    $default  reduce using rule 137 (locoptarray)

    locoptarray  go to state 142


state 85

  133 locallist: LOCAL @25 locallist1 .
  136 locallist1: locallist1 . ',' NAME locoptarray

    ','  shift, and go to state 143

    $default  reduce using rule 133 (locallist)


state 86

   89 optindex: '[' . INTEGER ']'

    INTEGER  shift, and go to state 144


state 87

   86 pvlist: name optindex .

    $default  reduce using rule 86 (pvlist)


state 88

   87 pvlist: pvlist ',' . name optindex

    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name  go to state 53
    name  go to state 145


state 89

   84 plotdecl: PLOT pvlist VS . name optindex

    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name  go to state 53
    name  go to state 146


state 90

    9 all: all MODEL_LEVEL INTEGER @1 . declare

    CONSTANT     shift, and go to state 8
    INDEPENDENT  shift, and go to state 9
    DEPENDENT    shift, and go to state 10
    STATE        shift, and go to state 11
    STEPPED      shift, and go to state 12
    PARAMETER    shift, and go to state 14
    PLOT         shift, and go to state 17
    UNITS        shift, and go to state 19
    NEURON       shift, and go to state 22

    declare    go to state 147
    parmblk    go to state 27
    stepblk    go to state 29
    indepblk   go to state 30
    depblk     go to state 31
    stateblk   go to state 32
    plotdecl   go to state 33
    unitblk    go to state 35
    constblk   go to state 36
    neuronblk  go to state 37


state 91

  346 unitblk: UNITS '{' unitbody . '}'
  348 unitbody: unitbody . unitdef
  349         | unitbody . factordef

    error  shift, and go to state 148
    '}'    shift, and go to state 149
    '('    shift, and go to state 150
    NAME   shift, and go to state 151

    unit       go to state 152
    unitdef    go to state 153
    factordef  go to state 154


state 92

  367 neuronblk: NEURON '{' nrnstmt . '}'
  369 nrnstmt: nrnstmt . SUFFIX NAME
  370        | nrnstmt . nrnuse
  371        | nrnstmt . NONSPECIFIC nrnlist
  372        | nrnstmt . ELECTRODE_CURRENT nrnlist
  373        | nrnstmt . SECTION nrnlist
  374        | nrnstmt . RANGE nrnlist
  375        | nrnstmt . GLOBAL nrnlist
  376        | nrnstmt . POINTER nrnlist
  377        | nrnstmt . EXTERNAL nrnlist
  378        | nrnstmt . THREADSAFE optnrnlist

    '}'                shift, and go to state 155
    SUFFIX             shift, and go to state 156
    NONSPECIFIC        shift, and go to state 157
    USEION             shift, and go to state 158
    THREADSAFE         shift, and go to state 159
    GLOBAL             shift, and go to state 160
    SECTION            shift, and go to state 161
    RANGE              shift, and go to state 162
    POINTER            shift, and go to state 163
    EXTERNAL           shift, and go to state 164
    ELECTRODE_CURRENT  shift, and go to state 165

    nrnuse  go to state 166


state 93

  124 initblk: INITIAL1 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 168


state 94

   91 proc: @7 initblk .

    $default  reduce using rule 91 (proc)


state 95

  246 derivblk: DERIVATIVE . NAME stmtlist '}'

    NAME  shift, and go to state 169


state 96

   93 proc: @8 derivblk .

    $default  reduce using rule 93 (proc)


state 97

  281 brkptblk: BREAKPOINT . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 170


state 98

   95 proc: @9 brkptblk .

    $default  reduce using rule 95 (proc)


state 99

  248 linblk: LINEAR . NAME solvefor @32 stmtlist '}'

    NAME  shift, and go to state 171


state 100

   97 proc: @10 linblk .

    $default  reduce using rule 97 (proc)


state 101

  249 nonlinblk: NONLINEAR . NAME solvefor stmtlist '}'

    NAME  shift, and go to state 172


state 102

   99 proc: @11 nonlinblk .

    $default  reduce using rule 99 (proc)


state 103

  260 funcblk: FUNCTION1 . NAME '(' arglist ')' units @33 stmtlist '}'

    NAME  shift, and go to state 173


state 104

  101 proc: @12 funcblk .

    $default  reduce using rule 101 (proc)


state 105

  266 procedblk: PROCEDURE . NAME '(' arglist ')' units stmtlist '}'

    NAME  shift, and go to state 174


state 106

  103 proc: @13 procedblk .

    $default  reduce using rule 103 (proc)


state 107

  268 netrecblk: NETRECEIVE . '(' arglist ')' @35 stmtlist '}'
  269          | NETRECEIVE . error

    error  shift, and go to state 175
    '('    shift, and go to state 176


state 108

  105 proc: @14 netrecblk .

    $default  reduce using rule 105 (proc)


state 109

  282 terminalblk: TERMINAL . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 177


state 110

  107 proc: @15 terminalblk .

    $default  reduce using rule 107 (proc)


state 111

  250 discretblk: DISCRETE . NAME stmtlist '}'

    NAME  shift, and go to state 178


state 112

  109 proc: @16 discretblk .

    $default  reduce using rule 109 (proc)


state 113

  251 partialblk: PARTIAL . NAME stmtlist '}'
  252           | PARTIAL . error

    error  shift, and go to state 179
    NAME   shift, and go to state 180


state 114

  111 proc: @17 partialblk .

    $default  reduce using rule 111 (proc)


state 115

  323 kineticblk: KINETIC . NAME solvefor stmtlist '}'

    NAME  shift, and go to state 181


state 116

  113 proc: @18 kineticblk .

    $default  reduce using rule 113 (proc)


state 117

  125 constructblk: CONSTRUCTOR . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 182


state 118

  115 proc: @19 constructblk .

    $default  reduce using rule 115 (proc)


state 119

  126 destructblk: DESTRUCTOR . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 183


state 120

  117 proc: @20 destructblk .

    $default  reduce using rule 117 (proc)


state 121

  258 functableblk: FUNCTION_TABLE . NAME '(' arglist ')' units

    NAME  shift, and go to state 184


state 122

  119 proc: @21 functableblk .

    $default  reduce using rule 119 (proc)


state 123

  121 proc: @22 BEFORE . bablk

    error       shift, and go to state 185
    INITIAL1    shift, and go to state 186
    SOLVE       shift, and go to state 187
    STEP        shift, and go to state 188
    BREAKPOINT  shift, and go to state 189

    bablk  go to state 190


state 124

  123 proc: @23 AFTER . bablk

    error       shift, and go to state 185
    INITIAL1    shift, and go to state 186
    SOLVE       shift, and go to state 187
    STEP        shift, and go to state 188
    BREAKPOINT  shift, and go to state 189

    bablk  go to state 191


state 125

  356 constblk: CONSTANT '{' conststmt '}' .

    $default  reduce using rule 356 (constblk)


state 126

  358 conststmt: conststmt NAME . '=' number units

    '='  shift, and go to state 192


state 127

   67 indepdef: error .

    $default  reduce using rule 67 (indepdef)


state 128

   61 indepblk: INDEPENDENT '{' indepbody '}' .

    $default  reduce using rule 61 (indepblk)


state 129

   66 indepdef: NAME . FROM number TO number withby integer opstart units

    FROM  shift, and go to state 193


state 130

   65 indepbody: indepbody SWEEP . @4 indepdef

    $default  reduce using rule 64 (@4)

    @4  go to state 194


state 131

   63 indepbody: indepbody indepdef .

    $default  reduce using rule 63 (indepbody)


state 132

   70 depblk: DEPENDENT @5 '{' depbody . '}'
   72 depbody: depbody . depdef

    error  shift, and go to state 195
    '}'    shift, and go to state 196
    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name    go to state 53
    name    go to state 197
    depdef  go to state 198


state 133

   72 depbody: depbody . depdef
   83 stateblk: STATE @6 '{' depbody . '}'

    error  shift, and go to state 195
    '}'    shift, and go to state 199
    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name    go to state 53
    name    go to state 197
    depdef  go to state 198


state 134

   45 stepblk: STEPPED '{' stepbdy '}' .

    $default  reduce using rule 45 (stepblk)


state 135

   48 stepped: NAME . '=' numlist units

    '='  shift, and go to state 200


state 136

   47 stepbdy: stepbdy stepped .

    $default  reduce using rule 47 (stepbdy)


state 137

   36 parmasgn: error .

    $default  reduce using rule 36 (parmasgn)


state 138

   30 parmblk: PARAMETER '{' parmbody '}' .

    $default  reduce using rule 30 (parmblk)


state 139

   33 parmasgn: NAME . '=' number units limits
   34         | NAME . units limits
   35         | NAME . '[' integer ']' units limits

    '('  shift, and go to state 150
    '['  shift, and go to state 201
    '='  shift, and go to state 202

    $default  reduce using rule 37 (units)

    units  go to state 203
    unit   go to state 204


state 140

   32 parmbody: parmbody parmasgn .

    $default  reduce using rule 32 (parmbody)


state 141

  138 locoptarray: '[' . integer ']'

    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 207


state 142

  135 locallist1: NAME locoptarray .

    $default  reduce using rule 135 (locallist1)


state 143

  136 locallist1: locallist1 ',' . NAME locoptarray

    NAME  shift, and go to state 208


state 144

   89 optindex: '[' INTEGER . ']'

    ']'  shift, and go to state 209


state 145

   87 pvlist: pvlist ',' name . optindex

    '['  shift, and go to state 86

    $default  reduce using rule 88 (optindex)

    optindex  go to state 210


state 146

   84 plotdecl: PLOT pvlist VS name . optindex

    '['  shift, and go to state 86

    $default  reduce using rule 88 (optindex)

    optindex  go to state 211


state 147

    9 all: all MODEL_LEVEL INTEGER @1 declare .

    $default  reduce using rule 9 (all)


state 148

  355 factordef: error .

    $default  reduce using rule 355 (factordef)


state 149

  346 unitblk: UNITS '{' unitbody '}' .

    $default  reduce using rule 346 (unitblk)


state 150

   40 unit: '(' . @3 ')'

    $default  reduce using rule 39 (@3)

    @3  go to state 212


state 151

  352 factordef: NAME . '=' real unit
  353          | NAME . '=' unit unit
  354          | NAME . '=' unit '-' GT unit

    '='  shift, and go to state 213


state 152

  350 unitdef: unit . '=' unit
  351        | unit . error

    error  shift, and go to state 214
    '='    shift, and go to state 215


state 153

  348 unitbody: unitbody unitdef .

    $default  reduce using rule 348 (unitbody)


state 154

  349 unitbody: unitbody factordef .

    $default  reduce using rule 349 (unitbody)


state 155

  367 neuronblk: NEURON '{' nrnstmt '}' .

    $default  reduce using rule 367 (neuronblk)


state 156

  369 nrnstmt: nrnstmt SUFFIX . NAME

    NAME  shift, and go to state 216


state 157

  371 nrnstmt: nrnstmt NONSPECIFIC . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 219


state 158

  379 nrnuse: USEION . NAME READ nrnlist valence
  380       | USEION . NAME WRITE nrnlist valence
  381       | USEION . NAME READ nrnlist WRITE nrnlist valence
  382       | USEION . error

    error  shift, and go to state 220
    NAME   shift, and go to state 221


state 159

  378 nrnstmt: nrnstmt THREADSAFE . optnrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    '}'                reduce using rule 386 (optnrnlist)
    SUFFIX             reduce using rule 386 (optnrnlist)
    NONSPECIFIC        reduce using rule 386 (optnrnlist)
    USEION             reduce using rule 386 (optnrnlist)
    THREADSAFE         reduce using rule 386 (optnrnlist)
    GLOBAL             reduce using rule 386 (optnrnlist)
    SECTION            reduce using rule 386 (optnrnlist)
    RANGE              reduce using rule 386 (optnrnlist)
    POINTER            reduce using rule 386 (optnrnlist)
    EXTERNAL           reduce using rule 386 (optnrnlist)
    ELECTRODE_CURRENT  reduce using rule 386 (optnrnlist)

    nrnlist     go to state 222
    optnrnlist  go to state 223


state 160

  375 nrnstmt: nrnstmt GLOBAL . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 224


state 161

  373 nrnstmt: nrnstmt SECTION . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 225


state 162

  374 nrnstmt: nrnstmt RANGE . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 226


state 163

  376 nrnstmt: nrnstmt POINTER . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 227


state 164

  377 nrnstmt: nrnstmt EXTERNAL . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 228


state 165

  372 nrnstmt: nrnstmt ELECTRODE_CURRENT . nrnlist

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 229


state 166

  370 nrnstmt: nrnstmt nrnuse .

    $default  reduce using rule 370 (nrnstmt)


state 167

  128 stmtlist: '{' . @24 stmtlist1
  129         | '{' . locallist stmtlist1

    LOCAL  shift, and go to state 15

    $default  reduce using rule 127 (@24)

    @24        go to state 230
    locallist  go to state 231


state 168

  124 initblk: INITIAL1 stmtlist . '}'

    '}'  shift, and go to state 232


state 169

  246 derivblk: DERIVATIVE NAME . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 233


state 170

  281 brkptblk: BREAKPOINT stmtlist . '}'

    '}'  shift, and go to state 234


state 171

  248 linblk: LINEAR NAME . solvefor @32 stmtlist '}'

    SOLVEFOR  shift, and go to state 235

    $default  reduce using rule 276 (solvefor)

    solvefor   go to state 236
    solvefor1  go to state 237


state 172

  249 nonlinblk: NONLINEAR NAME . solvefor stmtlist '}'

    SOLVEFOR  shift, and go to state 235

    $default  reduce using rule 276 (solvefor)

    solvefor   go to state 238
    solvefor1  go to state 237


state 173

  260 funcblk: FUNCTION1 NAME . '(' arglist ')' units @33 stmtlist '}'

    '('  shift, and go to state 239


state 174

  266 procedblk: PROCEDURE NAME . '(' arglist ')' units stmtlist '}'

    '('  shift, and go to state 240


state 175

  269 netrecblk: NETRECEIVE error .

    $default  reduce using rule 269 (netrecblk)


state 176

  268 netrecblk: NETRECEIVE '(' . arglist ')' @35 stmtlist '}'

    ')'       reduce using rule 261 (arglist)
    $default  reduce using rule 262 (@34)

    arglist  go to state 241
    @34      go to state 242


state 177

  282 terminalblk: TERMINAL stmtlist . '}'

    '}'  shift, and go to state 243


state 178

  250 discretblk: DISCRETE NAME . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 244


state 179

  252 partialblk: PARTIAL error .

    $default  reduce using rule 252 (partialblk)


state 180

  251 partialblk: PARTIAL NAME . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 245


state 181

  323 kineticblk: KINETIC NAME . solvefor stmtlist '}'

    SOLVEFOR  shift, and go to state 235

    $default  reduce using rule 276 (solvefor)

    solvefor   go to state 246
    solvefor1  go to state 237


state 182

  125 constructblk: CONSTRUCTOR stmtlist . '}'

    '}'  shift, and go to state 247


state 183

  126 destructblk: DESTRUCTOR stmtlist . '}'

    '}'  shift, and go to state 248


state 184

  258 functableblk: FUNCTION_TABLE NAME . '(' arglist ')' units

    '('  shift, and go to state 249


state 185

  287 bablk: error .

    $default  reduce using rule 287 (bablk)


state 186

  285 bablk: INITIAL1 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 250


state 187

  284 bablk: SOLVE . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 251


state 188

  286 bablk: STEP . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 252


state 189

  283 bablk: BREAKPOINT . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 253


state 190

  121 proc: @22 BEFORE bablk .

    $default  reduce using rule 121 (proc)


state 191

  123 proc: @23 AFTER bablk .

    $default  reduce using rule 123 (proc)


state 192

  358 conststmt: conststmt NAME '=' . number units

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 256
    NUMBER   go to state 257
    integer  go to state 258


state 193

   66 indepdef: NAME FROM . number TO number withby integer opstart units

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 259
    NUMBER   go to state 257
    integer  go to state 258


state 194

   65 indepbody: indepbody SWEEP @4 . indepdef

    error  shift, and go to state 127
    NAME   shift, and go to state 129

    indepdef  go to state 260


state 195

   77 depdef: error .

    $default  reduce using rule 77 (depdef)


state 196

   70 depblk: DEPENDENT @5 '{' depbody '}' .

    $default  reduce using rule 70 (depblk)


state 197

   73 depdef: name . opstart units abstol
   74       | name . '[' integer ']' opstart units abstol
   75       | name . FROM number TO number opstart units abstol
   76       | name . '[' integer ']' FROM number TO number opstart units abstol

    FROM    shift, and go to state 261
    START1  shift, and go to state 262
    '['     shift, and go to state 263

    $default  reduce using rule 78 (opstart)

    opstart  go to state 264


state 198

   72 depbody: depbody depdef .

    $default  reduce using rule 72 (depbody)


state 199

   83 stateblk: STATE @6 '{' depbody '}' .

    $default  reduce using rule 83 (stateblk)


state 200

   48 stepped: NAME '=' . numlist units

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    numlist  go to state 265
    number   go to state 266
    NUMBER   go to state 257
    integer  go to state 258


state 201

   35 parmasgn: NAME '[' . integer ']' units limits

    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 267


state 202

   33 parmasgn: NAME '=' . number units limits

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 268
    NUMBER   go to state 257
    integer  go to state 258


state 203

   34 parmasgn: NAME units . limits

    LT  shift, and go to state 269

    $default  reduce using rule 43 (limits)

    limits  go to state 270


state 204

   38 units: unit .

    $default  reduce using rule 38 (units)


state 205

   57 integer: INTEGER .

    $default  reduce using rule 57 (integer)


state 206

   58 integer: DEFINEDVAR .

    $default  reduce using rule 58 (integer)


state 207

  138 locoptarray: '[' integer . ']'

    ']'  shift, and go to state 271


state 208

  136 locallist1: locallist1 ',' NAME . locoptarray

    '['  shift, and go to state 141

    $default  reduce using rule 137 (locoptarray)

    locoptarray  go to state 272


state 209

   89 optindex: '[' INTEGER ']' .

    $default  reduce using rule 89 (optindex)


state 210

   87 pvlist: pvlist ',' name optindex .

    $default  reduce using rule 87 (pvlist)


state 211

   84 plotdecl: PLOT pvlist VS name optindex .

    $default  reduce using rule 84 (plotdecl)


state 212

   40 unit: '(' @3 . ')'

    ')'  shift, and go to state 273


state 213

  352 factordef: NAME '=' . real unit
  353          | NAME '=' . unit unit
  354          | NAME '=' . unit '-' GT unit

    '('         shift, and go to state 150
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    unit     go to state 275
    integer  go to state 276
    real     go to state 277


state 214

  351 unitdef: unit error .

    $default  reduce using rule 351 (unitdef)


state 215

  350 unitdef: unit '=' . unit

    '('  shift, and go to state 150

    unit  go to state 278


state 216

  369 nrnstmt: nrnstmt SUFFIX NAME .

    $default  reduce using rule 369 (nrnstmt)


state 217

  385 nrnlist: error .

    $default  reduce using rule 385 (nrnlist)


state 218

  383 nrnlist: NAME .

    $default  reduce using rule 383 (nrnlist)


state 219

  371 nrnstmt: nrnstmt NONSPECIFIC nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 371 (nrnstmt)


state 220

  382 nrnuse: USEION error .

    $default  reduce using rule 382 (nrnuse)


state 221

  379 nrnuse: USEION NAME . READ nrnlist valence
  380       | USEION NAME . WRITE nrnlist valence
  381       | USEION NAME . READ nrnlist WRITE nrnlist valence

    READ   shift, and go to state 280
    WRITE  shift, and go to state 281


state 222

  384 nrnlist: nrnlist . ',' NAME
  387 optnrnlist: nrnlist .

    ','  shift, and go to state 279

    $default  reduce using rule 387 (optnrnlist)


state 223

  378 nrnstmt: nrnstmt THREADSAFE optnrnlist .

    $default  reduce using rule 378 (nrnstmt)


state 224

  375 nrnstmt: nrnstmt GLOBAL nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 375 (nrnstmt)


state 225

  373 nrnstmt: nrnstmt SECTION nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 373 (nrnstmt)


state 226

  374 nrnstmt: nrnstmt RANGE nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 374 (nrnstmt)


state 227

  376 nrnstmt: nrnstmt POINTER nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 376 (nrnstmt)


state 228

  377 nrnstmt: nrnstmt EXTERNAL nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 377 (nrnstmt)


state 229

  372 nrnstmt: nrnstmt ELECTRODE_CURRENT nrnlist .
  384 nrnlist: nrnlist . ',' NAME

    ','  shift, and go to state 279

    $default  reduce using rule 372 (nrnstmt)


state 230

  128 stmtlist: '{' @24 . stmtlist1

    $default  reduce using rule 139 (stmtlist1)

    stmtlist1  go to state 282


state 231

  129 stmtlist: '{' locallist . stmtlist1

    $default  reduce using rule 139 (stmtlist1)

    stmtlist1  go to state 283


state 232

  124 initblk: INITIAL1 stmtlist '}' .

    $default  reduce using rule 124 (initblk)


state 233

  246 derivblk: DERIVATIVE NAME stmtlist . '}'

    '}'  shift, and go to state 284


state 234

  281 brkptblk: BREAKPOINT stmtlist '}' .

    $default  reduce using rule 281 (brkptblk)


state 235

  278 solvefor1: SOLVEFOR . NAME
  280          | SOLVEFOR . error

    error  shift, and go to state 285
    NAME   shift, and go to state 286


state 236

  248 linblk: LINEAR NAME solvefor . @32 stmtlist '}'

    $default  reduce using rule 247 (@32)

    @32  go to state 287


state 237

  277 solvefor: solvefor1 .
  279 solvefor1: solvefor1 . ',' NAME

    ','  shift, and go to state 288

    $default  reduce using rule 277 (solvefor)


state 238

  249 nonlinblk: NONLINEAR NAME solvefor . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 289


state 239

  260 funcblk: FUNCTION1 NAME '(' . arglist ')' units @33 stmtlist '}'

    ')'       reduce using rule 261 (arglist)
    $default  reduce using rule 262 (@34)

    arglist  go to state 290
    @34      go to state 242


state 240

  266 procedblk: PROCEDURE NAME '(' . arglist ')' units stmtlist '}'

    ')'       reduce using rule 261 (arglist)
    $default  reduce using rule 262 (@34)

    arglist  go to state 291
    @34      go to state 242


state 241

  268 netrecblk: NETRECEIVE '(' arglist . ')' @35 stmtlist '}'

    ')'  shift, and go to state 292


state 242

  263 arglist: @34 . arglist1

    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name      go to state 53
    name      go to state 293
    arglist1  go to state 294


state 243

  282 terminalblk: TERMINAL stmtlist '}' .

    $default  reduce using rule 282 (terminalblk)


state 244

  250 discretblk: DISCRETE NAME stmtlist . '}'

    '}'  shift, and go to state 295


state 245

  251 partialblk: PARTIAL NAME stmtlist . '}'

    '}'  shift, and go to state 296


state 246

  323 kineticblk: KINETIC NAME solvefor . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 297


state 247

  125 constructblk: CONSTRUCTOR stmtlist '}' .

    $default  reduce using rule 125 (constructblk)


state 248

  126 destructblk: DESTRUCTOR stmtlist '}' .

    $default  reduce using rule 126 (destructblk)


state 249

  258 functableblk: FUNCTION_TABLE NAME '(' . arglist ')' units

    ')'       reduce using rule 261 (arglist)
    $default  reduce using rule 262 (@34)

    arglist  go to state 298
    @34      go to state 242


state 250

  285 bablk: INITIAL1 stmtlist . '}'

    '}'  shift, and go to state 299


state 251

  284 bablk: SOLVE stmtlist . '}'

    '}'  shift, and go to state 300


state 252

  286 bablk: STEP stmtlist . '}'

    '}'  shift, and go to state 301


state 253

  283 bablk: BREAKPOINT stmtlist . '}'

    '}'  shift, and go to state 302


state 254

   54 number: '-' . NUMBER

    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    NUMBER   go to state 303
    integer  go to state 258


state 255

   56 NUMBER: REAL .

    $default  reduce using rule 56 (NUMBER)


state 256

  358 conststmt: conststmt NAME '=' number . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 304
    unit   go to state 204


state 257

   53 number: NUMBER .

    $default  reduce using rule 53 (number)


state 258

   55 NUMBER: integer .

    $default  reduce using rule 55 (NUMBER)


state 259

   66 indepdef: NAME FROM number . TO number withby integer opstart units

    TO  shift, and go to state 305


state 260

   65 indepbody: indepbody SWEEP @4 indepdef .

    $default  reduce using rule 65 (indepbody)


state 261

   75 depdef: name FROM . number TO number opstart units abstol

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 306
    NUMBER   go to state 257
    integer  go to state 258


state 262

   79 opstart: START1 . number

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 307
    NUMBER   go to state 257
    integer  go to state 258


state 263

   74 depdef: name '[' . integer ']' opstart units abstol
   76       | name '[' . integer ']' FROM number TO number opstart units abstol

    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 308


state 264

   73 depdef: name opstart . units abstol

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 309
    unit   go to state 204


state 265

   48 stepped: NAME '=' numlist . units
   50 numlist: numlist . ',' number

    '('  shift, and go to state 150
    ','  shift, and go to state 310

    $default  reduce using rule 37 (units)

    units  go to state 311
    unit   go to state 204


state 266

   49 numlist: number . ',' number

    ','  shift, and go to state 312


state 267

   35 parmasgn: NAME '[' integer . ']' units limits

    ']'  shift, and go to state 313


state 268

   33 parmasgn: NAME '=' number . units limits

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 314
    unit   go to state 204


state 269

   44 limits: LT . real ',' real GT

    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 276
    real     go to state 315


state 270

   34 parmasgn: NAME units limits .

    $default  reduce using rule 34 (parmasgn)


state 271

  138 locoptarray: '[' integer ']' .

    $default  reduce using rule 138 (locoptarray)


state 272

  136 locallist1: locallist1 ',' NAME locoptarray .

    $default  reduce using rule 136 (locallist1)


state 273

   40 unit: '(' @3 ')' .

    $default  reduce using rule 40 (unit)


state 274

   59 real: REAL .

    $default  reduce using rule 59 (real)


state 275

  353 factordef: NAME '=' unit . unit
  354          | NAME '=' unit . '-' GT unit

    '('  shift, and go to state 150
    '-'  shift, and go to state 316

    unit  go to state 317


state 276

   60 real: integer .

    $default  reduce using rule 60 (real)


state 277

  352 factordef: NAME '=' real . unit

    '('  shift, and go to state 150

    unit  go to state 318


state 278

  350 unitdef: unit '=' unit .

    $default  reduce using rule 350 (unitdef)


state 279

  384 nrnlist: nrnlist ',' . NAME

    NAME  shift, and go to state 319


state 280

  379 nrnuse: USEION NAME READ . nrnlist valence
  381       | USEION NAME READ . nrnlist WRITE nrnlist valence

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 320


state 281

  380 nrnuse: USEION NAME WRITE . nrnlist valence

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 321


state 282

  128 stmtlist: '{' @24 stmtlist1 .
  141 stmtlist1: stmtlist1 . @26 ostmt
  142          | stmtlist1 . astmt

    LIN1     shift, and go to state 322
    NONLIN1  shift, and go to state 323
    PROTECT  shift, and go to state 324
    NAME     shift, and go to state 325
    PRIME    shift, and go to state 52

    '}'       reduce using rule 128 (stmtlist)
    REACTION  reduce using rule 172 (@28)
    $default  reduce using rule 140 (@26)

    Name       go to state 53
    name       go to state 326
    @26        go to state 327
    astmt      go to state 328
    @28        go to state 329
    asgn       go to state 330
    varname    go to state 331
    nonlineqn  go to state 332
    lineqn     go to state 333
    funccall   go to state 334


state 283

  129 stmtlist: '{' locallist stmtlist1 .
  141 stmtlist1: stmtlist1 . @26 ostmt
  142          | stmtlist1 . astmt

    LIN1     shift, and go to state 322
    NONLIN1  shift, and go to state 323
    PROTECT  shift, and go to state 324
    NAME     shift, and go to state 325
    PRIME    shift, and go to state 52

    '}'       reduce using rule 129 (stmtlist)
    REACTION  reduce using rule 172 (@28)
    $default  reduce using rule 140 (@26)

    Name       go to state 53
    name       go to state 326
    @26        go to state 327
    astmt      go to state 328
    @28        go to state 329
    asgn       go to state 330
    varname    go to state 331
    nonlineqn  go to state 332
    lineqn     go to state 333
    funccall   go to state 334


state 284

  246 derivblk: DERIVATIVE NAME stmtlist '}' .

    $default  reduce using rule 246 (derivblk)


state 285

  280 solvefor1: SOLVEFOR error .

    $default  reduce using rule 280 (solvefor1)


state 286

  278 solvefor1: SOLVEFOR NAME .

    $default  reduce using rule 278 (solvefor1)


state 287

  248 linblk: LINEAR NAME solvefor @32 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 335


state 288

  279 solvefor1: solvefor1 ',' . NAME

    NAME  shift, and go to state 336


state 289

  249 nonlinblk: NONLINEAR NAME solvefor stmtlist . '}'

    '}'  shift, and go to state 337


state 290

  260 funcblk: FUNCTION1 NAME '(' arglist . ')' units @33 stmtlist '}'

    ')'  shift, and go to state 338


state 291

  266 procedblk: PROCEDURE NAME '(' arglist . ')' units stmtlist '}'

    ')'  shift, and go to state 339


state 292

  268 netrecblk: NETRECEIVE '(' arglist ')' . @35 stmtlist '}'

    $default  reduce using rule 267 (@35)

    @35  go to state 340


state 293

  264 arglist1: name . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 341
    unit   go to state 204


state 294

  263 arglist: @34 arglist1 .
  265 arglist1: arglist1 . ',' name units

    ','  shift, and go to state 342

    $default  reduce using rule 263 (arglist)


state 295

  250 discretblk: DISCRETE NAME stmtlist '}' .

    $default  reduce using rule 250 (discretblk)


state 296

  251 partialblk: PARTIAL NAME stmtlist '}' .

    $default  reduce using rule 251 (partialblk)


state 297

  323 kineticblk: KINETIC NAME solvefor stmtlist . '}'

    '}'  shift, and go to state 343


state 298

  258 functableblk: FUNCTION_TABLE NAME '(' arglist . ')' units

    ')'  shift, and go to state 344


state 299

  285 bablk: INITIAL1 stmtlist '}' .

    $default  reduce using rule 285 (bablk)


state 300

  284 bablk: SOLVE stmtlist '}' .

    $default  reduce using rule 284 (bablk)


state 301

  286 bablk: STEP stmtlist '}' .

    $default  reduce using rule 286 (bablk)


state 302

  283 bablk: BREAKPOINT stmtlist '}' .

    $default  reduce using rule 283 (bablk)


state 303

   54 number: '-' NUMBER .

    $default  reduce using rule 54 (number)


state 304

  358 conststmt: conststmt NAME '=' number units .

    $default  reduce using rule 358 (conststmt)


state 305

   66 indepdef: NAME FROM number TO . number withby integer opstart units

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 345
    NUMBER   go to state 257
    integer  go to state 258


state 306

   75 depdef: name FROM number . TO number opstart units abstol

    TO  shift, and go to state 346


state 307

   79 opstart: START1 number .

    $default  reduce using rule 79 (opstart)


state 308

   74 depdef: name '[' integer . ']' opstart units abstol
   76       | name '[' integer . ']' FROM number TO number opstart units abstol

    ']'  shift, and go to state 347


state 309

   73 depdef: name opstart units . abstol

    LT  shift, and go to state 348

    $default  reduce using rule 80 (abstol)

    abstol  go to state 349


state 310

   50 numlist: numlist ',' . number

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 350
    NUMBER   go to state 257
    integer  go to state 258


state 311

   48 stepped: NAME '=' numlist units .

    $default  reduce using rule 48 (stepped)


state 312

   49 numlist: number ',' . number

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 351
    NUMBER   go to state 257
    integer  go to state 258


state 313

   35 parmasgn: NAME '[' integer ']' . units limits

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 352
    unit   go to state 204


state 314

   33 parmasgn: NAME '=' number units . limits

    LT  shift, and go to state 269

    $default  reduce using rule 43 (limits)

    limits  go to state 353


state 315

   44 limits: LT real . ',' real GT

    ','  shift, and go to state 354


state 316

  354 factordef: NAME '=' unit '-' . GT unit

    GT  shift, and go to state 355


state 317

  353 factordef: NAME '=' unit unit .

    $default  reduce using rule 353 (factordef)


state 318

  352 factordef: NAME '=' real unit .

    $default  reduce using rule 352 (factordef)


state 319

  384 nrnlist: nrnlist ',' NAME .

    $default  reduce using rule 384 (nrnlist)


state 320

  379 nrnuse: USEION NAME READ nrnlist . valence
  381       | USEION NAME READ nrnlist . WRITE nrnlist valence
  384 nrnlist: nrnlist . ',' NAME

    ','      shift, and go to state 279
    WRITE    shift, and go to state 356
    VALENCE  shift, and go to state 357

    $default  reduce using rule 388 (valence)

    valence  go to state 358


state 321

  380 nrnuse: USEION NAME WRITE nrnlist . valence
  384 nrnlist: nrnlist . ',' NAME

    ','      shift, and go to state 279
    VALENCE  shift, and go to state 357

    $default  reduce using rule 388 (valence)

    valence  go to state 359


state 322

  211 lineqn: LIN1 .

    $default  reduce using rule 211 (lineqn)


state 323

  210 nonlineqn: NONLIN1 .

    $default  reduce using rule 210 (nonlineqn)


state 324

  171 astmt: PROTECT . @27 asgn

    $default  reduce using rule 170 (@27)

    @27  go to state 360


state 325

   20 Name: NAME .
  180 varname: NAME . '@' integer
  181        | NAME . '@' integer '[' intexpr ']'
  226 funccall: NAME . '(' @29 exprlist ')'

    '('  shift, and go to state 361
    '@'  shift, and go to state 362

    $default  reduce using rule 20 (Name)


state 326

  178 varname: name .
  179        | name . '[' intexpr ']'

    '['  shift, and go to state 363

    $default  reduce using rule 178 (varname)


state 327

  141 stmtlist1: stmtlist1 @26 . ostmt

    error           shift, and go to state 364
    VERBATIM        shift, and go to state 365
    COMMENT         shift, and go to state 366
    INITIAL1        shift, and go to state 367
    SOLVE           shift, and go to state 368
    FROM            shift, and go to state 369
    FORALL1         shift, and go to state 370
    WHILE           shift, and go to state 371
    IF              shift, and go to state 372
    SENS            shift, and go to state 373
    PUTQ            shift, and go to state 374
    GETQ            shift, and go to state 375
    TABLE           shift, and go to state 376
    NRNMUTEXLOCK    shift, and go to state 377
    NRNMUTEXUNLOCK  shift, and go to state 378
    '{'             shift, and go to state 167
    '~'             shift, and go to state 379
    LAG             shift, and go to state 380
    RESET           shift, and go to state 381
    MATCH           shift, and go to state 382
    CONSERVE        shift, and go to state 383
    COMPARTMENT     shift, and go to state 384
    UNITSON         shift, and go to state 20
    UNITSOFF        shift, and go to state 21
    LONGDIFUS       shift, and go to state 385
    WATCH           shift, and go to state 386
    FOR_NETCONS     shift, and go to state 387
    CONDUCTANCE     shift, and go to state 388

    uniton       go to state 389
    stmtlist     go to state 390
    conducthint  go to state 391
    ostmt        go to state 392
    fromstmt     go to state 393
    forallstmt   go to state 394
    whilestmt    go to state 395
    ifstmt       go to state 396
    pareqn       go to state 397
    initstmt     go to state 398
    solveblk     go to state 399
    watchstmt    go to state 400
    fornetcon    go to state 401
    sens         go to state 402
    conserve     go to state 403
    compart      go to state 404
    ldifus       go to state 405
    lagstmt      go to state 406
    queuestmt    go to state 407
    matchblk     go to state 408
    tablestmt    go to state 409


state 328

  142 stmtlist1: stmtlist1 astmt .

    $default  reduce using rule 142 (stmtlist1)


state 329

  173 astmt: @28 . reaction

    REACTION  shift, and go to state 410

    reaction  go to state 411


state 330

  169 astmt: asgn .

    $default  reduce using rule 169 (astmt)


state 331

  175 asgn: varname . '=' expr

    '='  shift, and go to state 412


state 332

  176 asgn: nonlineqn . expr '=' expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 419
    funccall  go to state 420


state 333

  177 asgn: lineqn . leftlinexpr '=' linexpr

    error       shift, and go to state 421
    '('         shift, and go to state 422
    '-'         shift, and go to state 423
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name         go to state 53
    name         go to state 326
    integer      go to state 276
    real         go to state 424
    varname      go to state 425
    leftlinexpr  go to state 426
    linexpr      go to state 427
    primary      go to state 428
    term         go to state 429
    funccall     go to state 430


state 334

  174 astmt: funccall .

    $default  reduce using rule 174 (astmt)


state 335

  248 linblk: LINEAR NAME solvefor @32 stmtlist . '}'

    '}'  shift, and go to state 431


state 336

  279 solvefor1: solvefor1 ',' NAME .

    $default  reduce using rule 279 (solvefor1)


state 337

  249 nonlinblk: NONLINEAR NAME solvefor stmtlist '}' .

    $default  reduce using rule 249 (nonlinblk)


state 338

  260 funcblk: FUNCTION1 NAME '(' arglist ')' . units @33 stmtlist '}'

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 432
    unit   go to state 204


state 339

  266 procedblk: PROCEDURE NAME '(' arglist ')' . units stmtlist '}'

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 433
    unit   go to state 204


state 340

  268 netrecblk: NETRECEIVE '(' arglist ')' @35 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 434


state 341

  264 arglist1: name units .

    $default  reduce using rule 264 (arglist1)


state 342

  265 arglist1: arglist1 ',' . name units

    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name  go to state 53
    name  go to state 435


state 343

  323 kineticblk: KINETIC NAME solvefor stmtlist '}' .

    $default  reduce using rule 323 (kineticblk)


state 344

  258 functableblk: FUNCTION_TABLE NAME '(' arglist ')' . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 436
    unit   go to state 204


state 345

   66 indepdef: NAME FROM number TO number . withby integer opstart units

    WITH  shift, and go to state 437

    withby  go to state 438


state 346

   75 depdef: name FROM number TO . number opstart units abstol

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 439
    NUMBER   go to state 257
    integer  go to state 258


state 347

   74 depdef: name '[' integer ']' . opstart units abstol
   76       | name '[' integer ']' . FROM number TO number opstart units abstol

    FROM    shift, and go to state 440
    START1  shift, and go to state 262

    $default  reduce using rule 78 (opstart)

    opstart  go to state 441


state 348

   81 abstol: LT . real GT

    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 276
    real     go to state 442


state 349

   73 depdef: name opstart units abstol .

    $default  reduce using rule 73 (depdef)


state 350

   50 numlist: numlist ',' number .

    $default  reduce using rule 50 (numlist)


state 351

   49 numlist: number ',' number .

    $default  reduce using rule 49 (numlist)


state 352

   35 parmasgn: NAME '[' integer ']' units . limits

    LT  shift, and go to state 269

    $default  reduce using rule 43 (limits)

    limits  go to state 443


state 353

   33 parmasgn: NAME '=' number units limits .

    $default  reduce using rule 33 (parmasgn)


state 354

   44 limits: LT real ',' . real GT

    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 276
    real     go to state 444


state 355

  354 factordef: NAME '=' unit '-' GT . unit

    '('  shift, and go to state 150

    unit  go to state 445


state 356

  381 nrnuse: USEION NAME READ nrnlist WRITE . nrnlist valence

    error  shift, and go to state 217
    NAME   shift, and go to state 218

    nrnlist  go to state 446


state 357

  389 valence: VALENCE . real
  390        | VALENCE . '-' real

    '-'         shift, and go to state 447
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 276
    real     go to state 448


state 358

  379 nrnuse: USEION NAME READ nrnlist valence .

    $default  reduce using rule 379 (nrnuse)


state 359

  380 nrnuse: USEION NAME WRITE nrnlist valence .

    $default  reduce using rule 380 (nrnuse)


state 360

  171 astmt: PROTECT @27 . asgn

    LIN1     shift, and go to state 322
    NONLIN1  shift, and go to state 323
    NAME     shift, and go to state 449
    PRIME    shift, and go to state 52

    Name       go to state 53
    name       go to state 326
    asgn       go to state 450
    varname    go to state 331
    nonlineqn  go to state 332
    lineqn     go to state 333


state 361

  226 funccall: NAME '(' . @29 exprlist ')'

    $default  reduce using rule 225 (@29)

    @29  go to state 451


state 362

  180 varname: NAME '@' . integer
  181        | NAME '@' . integer '[' intexpr ']'

    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 452


state 363

  179 varname: name '[' . intexpr ']'

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 457


state 364

  168 ostmt: error .

    $default  reduce using rule 168 (ostmt)


state 365

  150 ostmt: VERBATIM .

    $default  reduce using rule 150 (ostmt)


state 366

  151 ostmt: COMMENT .

    $default  reduce using rule 151 (ostmt)


state 367

  270 initstmt: INITIAL1 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 458


state 368

  271 solveblk: SOLVE . NAME ifsolerr
  272         | SOLVE . NAME USING METHOD ifsolerr
  273         | SOLVE . error

    error  shift, and go to state 459
    NAME   shift, and go to state 460


state 369

  233 fromstmt: FROM . NAME @30 '=' intexpr TO intexpr opinc stmtlist '}'
  234         | FROM . error

    error  shift, and go to state 461
    NAME   shift, and go to state 462


state 370

  238 forallstmt: FORALL1 . NAME @31 stmtlist '}'
  239           | FORALL1 . error

    error  shift, and go to state 463
    NAME   shift, and go to state 464


state 371

  240 whilestmt: WHILE . '(' expr ')' stmtlist '}'

    '('  shift, and go to state 465


state 372

  241 ifstmt: IF . '(' expr ')' stmtlist '}' optelseif optelse

    '('  shift, and go to state 466


state 373

  308 sens: SENS . senslist
  309     | SENS . error

    error  shift, and go to state 467
    NAME   shift, and go to state 449
    PRIME  shift, and go to state 52

    Name      go to state 53
    name      go to state 326
    varname   go to state 468
    senslist  go to state 469


state 374

  335 queuestmt: PUTQ . name

    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name  go to state 53
    name  go to state 470


state 375

  336 queuestmt: GETQ . name

    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name  go to state 53
    name  go to state 471


state 376

  359 tablestmt: TABLE . tablst dependlst FROM expr TO expr WITH INTEGER
  360          | TABLE . error

    error  shift, and go to state 472
    NAME   shift, and go to state 51

    FROM    reduce using rule 361 (tablst)
    DEPEND  reduce using rule 361 (tablst)

    Name     go to state 473
    tablst   go to state 474
    tablst1  go to state 475


state 377

  166 ostmt: NRNMUTEXLOCK .

    $default  reduce using rule 166 (ostmt)


state 378

  167 ostmt: NRNMUTEXUNLOCK .

    $default  reduce using rule 167 (ostmt)


state 379

  253 pareqn: '~' . PRIME '=' NAME '*' DEL2 '(' NAME ')' '+' NAME
  254       | '~' . DEL NAME '[' firstlast ']' '=' expr
  255       | '~' . NAME '[' firstlast ']' '=' expr

    DEL    shift, and go to state 476
    NAME   shift, and go to state 477
    PRIME  shift, and go to state 478


state 380

  333 lagstmt: LAG . name BY NAME
  334        | LAG . error

    error  shift, and go to state 479
    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name  go to state 53
    name  go to state 480


state 381

  158 ostmt: RESET .

    $default  reduce using rule 158 (ostmt)


state 382

  338 matchblk: MATCH . @41 '{' matchlist '}'

    $default  reduce using rule 337 (@41)

    @41  go to state 481


state 383

  313 conserve: CONSERVE . @37 react '=' expr
  314         | CONSERVE . error

    error  shift, and go to state 482

    NAME        reduce using rule 312 (@37)
    PRIME       reduce using rule 312 (@37)
    INTEGER     reduce using rule 312 (@37)
    DEFINEDVAR  reduce using rule 312 (@37)

    @37  go to state 483


state 384

  316 compart: COMPARTMENT . NAME ',' @38 expr '{' namelist '}'
  317        | COMPARTMENT . expr '{' namelist '}'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 484
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 485
    funccall  go to state 420


state 385

  319 ldifus: LONGDIFUS . NAME ',' @39 expr '{' namelist '}'
  320       | LONGDIFUS . expr '{' namelist '}'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 486
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 487
    funccall  go to state 420


state 386

  288 watchstmt: WATCH . watch1
  290          | WATCH . error

    error  shift, and go to state 488
    '('    shift, and go to state 489

    watch1  go to state 490


state 387

  295 fornetcon: FOR_NETCONS . '(' arglist ')' @36 stmtlist '}'
  296          | FOR_NETCONS . error

    error  shift, and go to state 491
    '('    shift, and go to state 492


state 388

  130 conducthint: CONDUCTANCE . Name
  131            | CONDUCTANCE . Name USEION NAME

    NAME  shift, and go to state 51

    Name  go to state 493


state 389

  162 ostmt: uniton .

    $default  reduce using rule 162 (ostmt)


state 390

  147 ostmt: stmtlist . '}'

    '}'  shift, and go to state 494


state 391

  149 ostmt: conducthint .

    $default  reduce using rule 149 (ostmt)


state 392

  141 stmtlist1: stmtlist1 @26 ostmt .

    $default  reduce using rule 141 (stmtlist1)


state 393

  143 ostmt: fromstmt .

    $default  reduce using rule 143 (ostmt)


state 394

  144 ostmt: forallstmt .

    $default  reduce using rule 144 (ostmt)


state 395

  145 ostmt: whilestmt .

    $default  reduce using rule 145 (ostmt)


state 396

  146 ostmt: ifstmt .

    $default  reduce using rule 146 (ostmt)


state 397

  160 ostmt: pareqn .

    $default  reduce using rule 160 (ostmt)


state 398

  163 ostmt: initstmt .

    $default  reduce using rule 163 (ostmt)


state 399

  148 ostmt: solveblk .

    $default  reduce using rule 148 (ostmt)


state 400

  164 ostmt: watchstmt .
  289 watchstmt: watchstmt . ',' watch1

    ','  shift, and go to state 495

    $default  reduce using rule 164 (ostmt)


state 401

  165 ostmt: fornetcon .

    $default  reduce using rule 165 (ostmt)


state 402

  152 ostmt: sens .

    $default  reduce using rule 152 (ostmt)


state 403

  155 ostmt: conserve .

    $default  reduce using rule 155 (ostmt)


state 404

  153 ostmt: compart .

    $default  reduce using rule 153 (ostmt)


state 405

  154 ostmt: ldifus .

    $default  reduce using rule 154 (ostmt)


state 406

  156 ostmt: lagstmt .

    $default  reduce using rule 156 (ostmt)


state 407

  157 ostmt: queuestmt .

    $default  reduce using rule 157 (ostmt)


state 408

  159 ostmt: matchblk .

    $default  reduce using rule 159 (ostmt)


state 409

  161 ostmt: tablestmt .

    $default  reduce using rule 161 (ostmt)


state 410

  325 reaction: REACTION . react REACT1 @40 react '(' expr ',' expr ')'
  326         | REACTION . react LT LT '(' expr ')'
  327         | REACTION . react '-' GT '(' expr ')'
  328         | REACTION . error

    error       shift, and go to state 496
    NAME        shift, and go to state 449
    PRIME       shift, and go to state 52
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 53
    name     go to state 326
    integer  go to state 497
    varname  go to state 498
    react    go to state 499


state 411

  173 astmt: @28 reaction .

    $default  reduce using rule 173 (astmt)


state 412

  175 asgn: varname '=' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 500
    funccall  go to state 420


state 413

  209 expr: error .

    $default  reduce using rule 209 (expr)


state 414

  193 expr: '(' . expr ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 501
    funccall  go to state 420


state 415

  208 expr: '-' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 502
    funccall  go to state 420


state 416

  207 expr: NOT . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 503
    funccall  go to state 420


state 417

  191 expr: real . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 504
    unit   go to state 204


state 418

  190 expr: varname .

    $default  reduce using rule 190 (expr)


state 419

  176 asgn: nonlineqn expr . '=' expr
  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '='  shift, and go to state 509
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 420

  192 expr: funccall .

    $default  reduce using rule 192 (expr)


state 421

  224 term: error .

    $default  reduce using rule 224 (term)


state 422

  223 term: '(' . expr ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 519
    funccall  go to state 420


state 423

  214 linexpr: '-' . primary

    error       shift, and go to state 421
    '('         shift, and go to state 422
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 424
    varname   go to state 425
    primary   go to state 520
    term      go to state 429
    funccall  go to state 430


state 424

  221 term: real .

    $default  reduce using rule 221 (term)


state 425

  220 term: varname .

    $default  reduce using rule 220 (term)


state 426

  177 asgn: lineqn leftlinexpr . '=' linexpr

    '='  shift, and go to state 521


state 427

  212 leftlinexpr: linexpr .
  215 linexpr: linexpr . '+' primary
  216        | linexpr . '-' primary

    '+'  shift, and go to state 522
    '-'  shift, and go to state 523

    $default  reduce using rule 212 (leftlinexpr)


state 428

  213 linexpr: primary .
  218 primary: primary . '*' term
  219        | primary . '/' term

    '*'  shift, and go to state 524
    '/'  shift, and go to state 525

    $default  reduce using rule 213 (linexpr)


state 429

  217 primary: term .

    $default  reduce using rule 217 (primary)


state 430

  222 term: funccall .

    $default  reduce using rule 222 (term)


state 431

  248 linblk: LINEAR NAME solvefor @32 stmtlist '}' .

    $default  reduce using rule 248 (linblk)


state 432

  260 funcblk: FUNCTION1 NAME '(' arglist ')' units . @33 stmtlist '}'

    $default  reduce using rule 259 (@33)

    @33  go to state 526


state 433

  266 procedblk: PROCEDURE NAME '(' arglist ')' units . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 527


state 434

  268 netrecblk: NETRECEIVE '(' arglist ')' @35 stmtlist . '}'

    '}'  shift, and go to state 528


state 435

  265 arglist1: arglist1 ',' name . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 529
    unit   go to state 204


state 436

  258 functableblk: FUNCTION_TABLE NAME '(' arglist ')' units .

    $default  reduce using rule 258 (functableblk)


state 437

   68 withby: WITH .

    $default  reduce using rule 68 (withby)


state 438

   66 indepdef: NAME FROM number TO number withby . integer opstart units

    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 530


state 439

   75 depdef: name FROM number TO number . opstart units abstol

    START1  shift, and go to state 262

    $default  reduce using rule 78 (opstart)

    opstart  go to state 531


state 440

   76 depdef: name '[' integer ']' FROM . number TO number opstart units abstol

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 532
    NUMBER   go to state 257
    integer  go to state 258


state 441

   74 depdef: name '[' integer ']' opstart . units abstol

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 533
    unit   go to state 204


state 442

   81 abstol: LT real . GT

    GT  shift, and go to state 534


state 443

   35 parmasgn: NAME '[' integer ']' units limits .

    $default  reduce using rule 35 (parmasgn)


state 444

   44 limits: LT real ',' real . GT

    GT  shift, and go to state 535


state 445

  354 factordef: NAME '=' unit '-' GT unit .

    $default  reduce using rule 354 (factordef)


state 446

  381 nrnuse: USEION NAME READ nrnlist WRITE nrnlist . valence
  384 nrnlist: nrnlist . ',' NAME

    ','      shift, and go to state 279
    VALENCE  shift, and go to state 357

    $default  reduce using rule 388 (valence)

    valence  go to state 536


state 447

  390 valence: VALENCE '-' . real

    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 276
    real     go to state 537


state 448

  389 valence: VALENCE real .

    $default  reduce using rule 389 (valence)


state 449

   20 Name: NAME .
  180 varname: NAME . '@' integer
  181        | NAME . '@' integer '[' intexpr ']'

    '@'  shift, and go to state 362

    $default  reduce using rule 20 (Name)


state 450

  171 astmt: PROTECT @27 asgn .

    $default  reduce using rule 171 (astmt)


state 451

  226 funccall: NAME '(' @29 . exprlist ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206
    STRING      shift, and go to state 538

    ')'  reduce using rule 227 (exprlist)
    ','  reduce using rule 227 (exprlist)

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 539
    funccall  go to state 420
    exprlist  go to state 540


state 452

  180 varname: NAME '@' integer .
  181        | NAME '@' integer . '[' intexpr ']'

    '['  shift, and go to state 541

    $default  reduce using rule 180 (varname)


state 453

  189 intexpr: error .

    $default  reduce using rule 189 (intexpr)


state 454

  184 intexpr: '(' . intexpr ')'

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 542


state 455

  182 intexpr: Name .

    $default  reduce using rule 182 (intexpr)


state 456

  183 intexpr: integer .

    $default  reduce using rule 183 (intexpr)


state 457

  179 varname: name '[' intexpr . ']'
  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr

    ']'  shift, and go to state 543
    '+'  shift, and go to state 544
    '*'  shift, and go to state 545
    '-'  shift, and go to state 546
    '/'  shift, and go to state 547


state 458

  270 initstmt: INITIAL1 stmtlist . '}'

    '}'  shift, and go to state 548


state 459

  273 solveblk: SOLVE error .

    $default  reduce using rule 273 (solveblk)


state 460

  271 solveblk: SOLVE NAME . ifsolerr
  272         | SOLVE NAME . USING METHOD ifsolerr

    USING    shift, and go to state 549
    IFERROR  shift, and go to state 550

    $default  reduce using rule 274 (ifsolerr)

    ifsolerr  go to state 551


state 461

  234 fromstmt: FROM error .

    $default  reduce using rule 234 (fromstmt)


state 462

  233 fromstmt: FROM NAME . @30 '=' intexpr TO intexpr opinc stmtlist '}'

    $default  reduce using rule 232 (@30)

    @30  go to state 552


state 463

  239 forallstmt: FORALL1 error .

    $default  reduce using rule 239 (forallstmt)


state 464

  238 forallstmt: FORALL1 NAME . @31 stmtlist '}'

    $default  reduce using rule 237 (@31)

    @31  go to state 553


state 465

  240 whilestmt: WHILE '(' . expr ')' stmtlist '}'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 554
    funccall  go to state 420


state 466

  241 ifstmt: IF '(' . expr ')' stmtlist '}' optelseif optelse

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 555
    funccall  go to state 420


state 467

  309 sens: SENS error .

    $default  reduce using rule 309 (sens)


state 468

  310 senslist: varname .

    $default  reduce using rule 310 (senslist)


state 469

  308 sens: SENS senslist .
  311 senslist: senslist . ',' varname

    ','  shift, and go to state 556

    $default  reduce using rule 308 (sens)


state 470

  335 queuestmt: PUTQ name .

    $default  reduce using rule 335 (queuestmt)


state 471

  336 queuestmt: GETQ name .

    $default  reduce using rule 336 (queuestmt)


state 472

  360 tablestmt: TABLE error .

    $default  reduce using rule 360 (tablestmt)


state 473

  363 tablst1: Name .

    $default  reduce using rule 363 (tablst1)


state 474

  359 tablestmt: TABLE tablst . dependlst FROM expr TO expr WITH INTEGER

    DEPEND  shift, and go to state 557

    $default  reduce using rule 365 (dependlst)

    dependlst  go to state 558


state 475

  362 tablst: tablst1 .
  364 tablst1: tablst1 . ',' Name

    ','  shift, and go to state 559

    $default  reduce using rule 362 (tablst)


state 476

  254 pareqn: '~' DEL . NAME '[' firstlast ']' '=' expr

    NAME  shift, and go to state 560


state 477

  255 pareqn: '~' NAME . '[' firstlast ']' '=' expr

    '['  shift, and go to state 561


state 478

  253 pareqn: '~' PRIME . '=' NAME '*' DEL2 '(' NAME ')' '+' NAME

    '='  shift, and go to state 562


state 479

  334 lagstmt: LAG error .

    $default  reduce using rule 334 (lagstmt)


state 480

  333 lagstmt: LAG name . BY NAME

    BY  shift, and go to state 563


state 481

  338 matchblk: MATCH @41 . '{' matchlist '}'

    '{'  shift, and go to state 564


state 482

  314 conserve: CONSERVE error .

    $default  reduce using rule 314 (conserve)


state 483

  313 conserve: CONSERVE @37 . react '=' expr

    NAME        shift, and go to state 449
    PRIME       shift, and go to state 52
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 53
    name     go to state 326
    integer  go to state 497
    varname  go to state 498
    react    go to state 565


state 484

   20 Name: NAME .
  180 varname: NAME . '@' integer
  181        | NAME . '@' integer '[' intexpr ']'
  226 funccall: NAME . '(' @29 exprlist ')'
  316 compart: COMPARTMENT NAME . ',' @38 expr '{' namelist '}'

    '('  shift, and go to state 361
    '@'  shift, and go to state 362
    ','  shift, and go to state 566

    $default  reduce using rule 20 (Name)


state 485

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  317 compart: COMPARTMENT expr . '{' namelist '}'

    '{'  shift, and go to state 567
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 486

   20 Name: NAME .
  180 varname: NAME . '@' integer
  181        | NAME . '@' integer '[' intexpr ']'
  226 funccall: NAME . '(' @29 exprlist ')'
  319 ldifus: LONGDIFUS NAME . ',' @39 expr '{' namelist '}'

    '('  shift, and go to state 361
    '@'  shift, and go to state 362
    ','  shift, and go to state 568

    $default  reduce using rule 20 (Name)


state 487

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  320 ldifus: LONGDIFUS expr . '{' namelist '}'

    '{'  shift, and go to state 569
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 488

  290 watchstmt: WATCH error .

    $default  reduce using rule 290 (watchstmt)


state 489

  291 watch1: '(' . aexpr watchdir aexpr ')' real

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 576


state 490

  288 watchstmt: WATCH watch1 .

    $default  reduce using rule 288 (watchstmt)


state 491

  296 fornetcon: FOR_NETCONS error .

    $default  reduce using rule 296 (fornetcon)


state 492

  295 fornetcon: FOR_NETCONS '(' . arglist ')' @36 stmtlist '}'

    ')'       reduce using rule 261 (arglist)
    $default  reduce using rule 262 (@34)

    arglist  go to state 577
    @34      go to state 242


state 493

  130 conducthint: CONDUCTANCE Name .
  131            | CONDUCTANCE Name . USEION NAME

    USEION  shift, and go to state 578

    $default  reduce using rule 130 (conducthint)


state 494

  147 ostmt: stmtlist '}' .

    $default  reduce using rule 147 (ostmt)


state 495

  289 watchstmt: watchstmt ',' . watch1

    '('  shift, and go to state 489

    watch1  go to state 579


state 496

  328 reaction: REACTION error .

    $default  reduce using rule 328 (reaction)


state 497

  330 react: integer . varname

    NAME   shift, and go to state 449
    PRIME  shift, and go to state 52

    Name     go to state 53
    name     go to state 326
    varname  go to state 580


state 498

  329 react: varname .

    $default  reduce using rule 329 (react)


state 499

  325 reaction: REACTION react . REACT1 @40 react '(' expr ',' expr ')'
  326         | REACTION react . LT LT '(' expr ')'
  327         | REACTION react . '-' GT '(' expr ')'
  331 react: react . '+' varname
  332      | react . '+' integer varname

    '+'     shift, and go to state 581
    '-'     shift, and go to state 582
    LT      shift, and go to state 583
    REACT1  shift, and go to state 584


state 500

  175 asgn: varname '=' expr .
  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 175 (asgn)


state 501

  193 expr: '(' expr . ')'
  194     | expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    ')'  shift, and go to state 585
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 502

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  208     | '-' expr .

    '^'  shift, and go to state 510

    $default  reduce using rule 208 (expr)


state 503

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  207     | NOT expr .

    '^'  shift, and go to state 510

    $default  reduce using rule 207 (expr)


state 504

  191 expr: real units .

    $default  reduce using rule 191 (expr)


state 505

  194 expr: expr '+' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 586
    funccall  go to state 420


state 506

  196 expr: expr '*' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 587
    funccall  go to state 420


state 507

  195 expr: expr '-' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 588
    funccall  go to state 420


state 508

  197 expr: expr '/' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 589
    funccall  go to state 420


state 509

  176 asgn: nonlineqn expr '=' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 590
    funccall  go to state 420


state 510

  198 expr: expr '^' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 591
    funccall  go to state 420


state 511

  199 expr: expr OR . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 592
    funccall  go to state 420


state 512

  200 expr: expr AND . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 593
    funccall  go to state 420


state 513

  201 expr: expr GT . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 594
    funccall  go to state 420


state 514

  202 expr: expr LT . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 595
    funccall  go to state 420


state 515

  204 expr: expr LE . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 596
    funccall  go to state 420


state 516

  205 expr: expr EQ . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 597
    funccall  go to state 420


state 517

  206 expr: expr NE . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 598
    funccall  go to state 420


state 518

  203 expr: expr GE . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 599
    funccall  go to state 420


state 519

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  223 term: '(' expr . ')'

    ')'  shift, and go to state 600
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 520

  214 linexpr: '-' primary .
  218 primary: primary . '*' term
  219        | primary . '/' term

    '*'  shift, and go to state 524
    '/'  shift, and go to state 525

    $default  reduce using rule 214 (linexpr)


state 521

  177 asgn: lineqn leftlinexpr '=' . linexpr

    error       shift, and go to state 421
    '('         shift, and go to state 422
    '-'         shift, and go to state 423
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 424
    varname   go to state 425
    linexpr   go to state 601
    primary   go to state 428
    term      go to state 429
    funccall  go to state 430


state 522

  215 linexpr: linexpr '+' . primary

    error       shift, and go to state 421
    '('         shift, and go to state 422
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 424
    varname   go to state 425
    primary   go to state 602
    term      go to state 429
    funccall  go to state 430


state 523

  216 linexpr: linexpr '-' . primary

    error       shift, and go to state 421
    '('         shift, and go to state 422
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 424
    varname   go to state 425
    primary   go to state 603
    term      go to state 429
    funccall  go to state 430


state 524

  218 primary: primary '*' . term

    error       shift, and go to state 421
    '('         shift, and go to state 422
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 424
    varname   go to state 425
    term      go to state 604
    funccall  go to state 430


state 525

  219 primary: primary '/' . term

    error       shift, and go to state 421
    '('         shift, and go to state 422
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 424
    varname   go to state 425
    term      go to state 605
    funccall  go to state 430


state 526

  260 funcblk: FUNCTION1 NAME '(' arglist ')' units @33 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 606


state 527

  266 procedblk: PROCEDURE NAME '(' arglist ')' units stmtlist . '}'

    '}'  shift, and go to state 607


state 528

  268 netrecblk: NETRECEIVE '(' arglist ')' @35 stmtlist '}' .

    $default  reduce using rule 268 (netrecblk)


state 529

  265 arglist1: arglist1 ',' name units .

    $default  reduce using rule 265 (arglist1)


state 530

   66 indepdef: NAME FROM number TO number withby integer . opstart units

    START1  shift, and go to state 262

    $default  reduce using rule 78 (opstart)

    opstart  go to state 608


state 531

   75 depdef: name FROM number TO number opstart . units abstol

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 609
    unit   go to state 204


state 532

   76 depdef: name '[' integer ']' FROM number . TO number opstart units abstol

    TO  shift, and go to state 610


state 533

   74 depdef: name '[' integer ']' opstart units . abstol

    LT  shift, and go to state 348

    $default  reduce using rule 80 (abstol)

    abstol  go to state 611


state 534

   81 abstol: LT real GT .

    $default  reduce using rule 81 (abstol)


state 535

   44 limits: LT real ',' real GT .

    $default  reduce using rule 44 (limits)


state 536

  381 nrnuse: USEION NAME READ nrnlist WRITE nrnlist valence .

    $default  reduce using rule 381 (nrnuse)


state 537

  390 valence: VALENCE '-' real .

    $default  reduce using rule 390 (valence)


state 538

  229 exprlist: STRING .

    $default  reduce using rule 229 (exprlist)


state 539

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  228 exprlist: expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 228 (exprlist)


state 540

  226 funccall: NAME '(' @29 exprlist . ')'
  230 exprlist: exprlist . ',' expr
  231         | exprlist . ',' STRING

    ')'  shift, and go to state 612
    ','  shift, and go to state 613


state 541

  181 varname: NAME '@' integer '[' . intexpr ']'

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 614


state 542

  184 intexpr: '(' intexpr . ')'
  185        | intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr

    ')'  shift, and go to state 615
    '+'  shift, and go to state 544
    '*'  shift, and go to state 545
    '-'  shift, and go to state 546
    '/'  shift, and go to state 547


state 543

  179 varname: name '[' intexpr ']' .

    $default  reduce using rule 179 (varname)


state 544

  185 intexpr: intexpr '+' . intexpr

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 616


state 545

  187 intexpr: intexpr '*' . intexpr

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 617


state 546

  186 intexpr: intexpr '-' . intexpr

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 618


state 547

  188 intexpr: intexpr '/' . intexpr

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 619


state 548

  270 initstmt: INITIAL1 stmtlist '}' .

    $default  reduce using rule 270 (initstmt)


state 549

  272 solveblk: SOLVE NAME USING . METHOD ifsolerr

    METHOD  shift, and go to state 620


state 550

  275 ifsolerr: IFERROR . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 621


state 551

  271 solveblk: SOLVE NAME ifsolerr .

    $default  reduce using rule 271 (solveblk)


state 552

  233 fromstmt: FROM NAME @30 . '=' intexpr TO intexpr opinc stmtlist '}'

    '='  shift, and go to state 622


state 553

  238 forallstmt: FORALL1 NAME @31 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 623


state 554

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  240 whilestmt: WHILE '(' expr . ')' stmtlist '}'

    ')'  shift, and go to state 624
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 555

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  241 ifstmt: IF '(' expr . ')' stmtlist '}' optelseif optelse

    ')'  shift, and go to state 625
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 556

  311 senslist: senslist ',' . varname

    NAME   shift, and go to state 449
    PRIME  shift, and go to state 52

    Name     go to state 53
    name     go to state 326
    varname  go to state 626


state 557

  366 dependlst: DEPEND . tablst1

    NAME  shift, and go to state 51

    Name     go to state 473
    tablst1  go to state 627


state 558

  359 tablestmt: TABLE tablst dependlst . FROM expr TO expr WITH INTEGER

    FROM  shift, and go to state 628


state 559

  364 tablst1: tablst1 ',' . Name

    NAME  shift, and go to state 51

    Name  go to state 629


state 560

  254 pareqn: '~' DEL NAME . '[' firstlast ']' '=' expr

    '['  shift, and go to state 630


state 561

  255 pareqn: '~' NAME '[' . firstlast ']' '=' expr

    FIRST  shift, and go to state 631
    LAST   shift, and go to state 632

    firstlast  go to state 633


state 562

  253 pareqn: '~' PRIME '=' . NAME '*' DEL2 '(' NAME ')' '+' NAME

    NAME  shift, and go to state 634


state 563

  333 lagstmt: LAG name BY . NAME

    NAME  shift, and go to state 635


state 564

  338 matchblk: MATCH @41 '{' . matchlist '}'

    error  shift, and go to state 636
    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name       go to state 53
    name       go to state 637
    matchlist  go to state 638
    match      go to state 639
    matchname  go to state 640


state 565

  313 conserve: CONSERVE @37 react . '=' expr
  331 react: react . '+' varname
  332      | react . '+' integer varname

    '+'  shift, and go to state 581
    '='  shift, and go to state 641


state 566

  316 compart: COMPARTMENT NAME ',' . @38 expr '{' namelist '}'

    $default  reduce using rule 315 (@38)

    @38  go to state 642


state 567

  317 compart: COMPARTMENT expr '{' . namelist '}'

    NAME  shift, and go to state 643

    namelist  go to state 644


state 568

  319 ldifus: LONGDIFUS NAME ',' . @39 expr '{' namelist '}'

    $default  reduce using rule 318 (@39)

    @39  go to state 645


state 569

  320 ldifus: LONGDIFUS expr '{' . namelist '}'

    NAME  shift, and go to state 643

    namelist  go to state 646


state 570

  307 aexpr: error .

    $default  reduce using rule 307 (aexpr)


state 571

  300 aexpr: '(' . aexpr ')'

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 647


state 572

  306 aexpr: '-' . aexpr

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 648


state 573

  298 aexpr: real . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 649
    unit   go to state 204


state 574

  297 aexpr: varname .

    $default  reduce using rule 297 (aexpr)


state 575

  299 aexpr: funccall .

    $default  reduce using rule 299 (aexpr)


state 576

  291 watch1: '(' aexpr . watchdir aexpr ')' real
  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr

    '+'  shift, and go to state 650
    '*'  shift, and go to state 651
    '-'  shift, and go to state 652
    '/'  shift, and go to state 653
    '^'  shift, and go to state 654
    GT   shift, and go to state 655
    LT   shift, and go to state 656

    watchdir  go to state 657


state 577

  295 fornetcon: FOR_NETCONS '(' arglist . ')' @36 stmtlist '}'

    ')'  shift, and go to state 658


state 578

  131 conducthint: CONDUCTANCE Name USEION . NAME

    NAME  shift, and go to state 659


state 579

  289 watchstmt: watchstmt ',' watch1 .

    $default  reduce using rule 289 (watchstmt)


state 580

  330 react: integer varname .

    $default  reduce using rule 330 (react)


state 581

  331 react: react '+' . varname
  332      | react '+' . integer varname

    NAME        shift, and go to state 449
    PRIME       shift, and go to state 52
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 53
    name     go to state 326
    integer  go to state 660
    varname  go to state 661


state 582

  327 reaction: REACTION react '-' . GT '(' expr ')'

    GT  shift, and go to state 662


state 583

  326 reaction: REACTION react LT . LT '(' expr ')'

    LT  shift, and go to state 663


state 584

  325 reaction: REACTION react REACT1 . @40 react '(' expr ',' expr ')'

    $default  reduce using rule 324 (@40)

    @40  go to state 664


state 585

  193 expr: '(' expr ')' .

    $default  reduce using rule 193 (expr)


state 586

  194 expr: expr . '+' expr
  194     | expr '+' expr .
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '*'  shift, and go to state 506
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 194 (expr)


state 587

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  196     | expr '*' expr .
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '^'  shift, and go to state 510

    $default  reduce using rule 196 (expr)


state 588

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  195     | expr '-' expr .
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '*'  shift, and go to state 506
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 195 (expr)


state 589

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  197     | expr '/' expr .
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '^'  shift, and go to state 510

    $default  reduce using rule 197 (expr)


state 590

  176 asgn: nonlineqn expr '=' expr .
  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 176 (asgn)


state 591

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  198     | expr '^' expr .
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '^'  shift, and go to state 510

    $default  reduce using rule 198 (expr)


state 592

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  199     | expr OR expr .
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 199 (expr)


state 593

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  200     | expr AND expr .
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 200 (expr)


state 594

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  201     | expr GT expr .
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 201 (expr)


state 595

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  202     | expr LT expr .
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 202 (expr)


state 596

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  204     | expr LE expr .
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 204 (expr)


state 597

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  205     | expr EQ expr .
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 205 (expr)


state 598

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  206     | expr NE expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 206 (expr)


state 599

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  203     | expr GE expr .
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510

    $default  reduce using rule 203 (expr)


state 600

  223 term: '(' expr ')' .

    $default  reduce using rule 223 (term)


state 601

  177 asgn: lineqn leftlinexpr '=' linexpr .
  215 linexpr: linexpr . '+' primary
  216        | linexpr . '-' primary

    '+'  shift, and go to state 522
    '-'  shift, and go to state 523

    $default  reduce using rule 177 (asgn)


state 602

  215 linexpr: linexpr '+' primary .
  218 primary: primary . '*' term
  219        | primary . '/' term

    '*'  shift, and go to state 524
    '/'  shift, and go to state 525

    $default  reduce using rule 215 (linexpr)


state 603

  216 linexpr: linexpr '-' primary .
  218 primary: primary . '*' term
  219        | primary . '/' term

    '*'  shift, and go to state 524
    '/'  shift, and go to state 525

    $default  reduce using rule 216 (linexpr)


state 604

  218 primary: primary '*' term .

    $default  reduce using rule 218 (primary)


state 605

  219 primary: primary '/' term .

    $default  reduce using rule 219 (primary)


state 606

  260 funcblk: FUNCTION1 NAME '(' arglist ')' units @33 stmtlist . '}'

    '}'  shift, and go to state 665


state 607

  266 procedblk: PROCEDURE NAME '(' arglist ')' units stmtlist '}' .

    $default  reduce using rule 266 (procedblk)


state 608

   66 indepdef: NAME FROM number TO number withby integer opstart . units

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 666
    unit   go to state 204


state 609

   75 depdef: name FROM number TO number opstart units . abstol

    LT  shift, and go to state 348

    $default  reduce using rule 80 (abstol)

    abstol  go to state 667


state 610

   76 depdef: name '[' integer ']' FROM number TO . number opstart units abstol

    '-'         shift, and go to state 254
    REAL        shift, and go to state 255
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    number   go to state 668
    NUMBER   go to state 257
    integer  go to state 258


state 611

   74 depdef: name '[' integer ']' opstart units abstol .

    $default  reduce using rule 74 (depdef)


state 612

  226 funccall: NAME '(' @29 exprlist ')' .

    $default  reduce using rule 226 (funccall)


state 613

  230 exprlist: exprlist ',' . expr
  231         | exprlist ',' . STRING

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206
    STRING      shift, and go to state 669

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 670
    funccall  go to state 420


state 614

  181 varname: NAME '@' integer '[' intexpr . ']'
  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr

    ']'  shift, and go to state 671
    '+'  shift, and go to state 544
    '*'  shift, and go to state 545
    '-'  shift, and go to state 546
    '/'  shift, and go to state 547


state 615

  184 intexpr: '(' intexpr ')' .

    $default  reduce using rule 184 (intexpr)


state 616

  185 intexpr: intexpr . '+' intexpr
  185        | intexpr '+' intexpr .
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr

    '*'  shift, and go to state 545
    '/'  shift, and go to state 547

    $default  reduce using rule 185 (intexpr)


state 617

  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  187        | intexpr '*' intexpr .
  188        | intexpr . '/' intexpr

    $default  reduce using rule 187 (intexpr)


state 618

  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  186        | intexpr '-' intexpr .
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr

    '*'  shift, and go to state 545
    '/'  shift, and go to state 547

    $default  reduce using rule 186 (intexpr)


state 619

  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr
  188        | intexpr '/' intexpr .

    $default  reduce using rule 188 (intexpr)


state 620

  272 solveblk: SOLVE NAME USING METHOD . ifsolerr

    IFERROR  shift, and go to state 550

    $default  reduce using rule 274 (ifsolerr)

    ifsolerr  go to state 672


state 621

  275 ifsolerr: IFERROR stmtlist . '}'

    '}'  shift, and go to state 673


state 622

  233 fromstmt: FROM NAME @30 '=' . intexpr TO intexpr opinc stmtlist '}'

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 674


state 623

  238 forallstmt: FORALL1 NAME @31 stmtlist . '}'

    '}'  shift, and go to state 675


state 624

  240 whilestmt: WHILE '(' expr ')' . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 676


state 625

  241 ifstmt: IF '(' expr ')' . stmtlist '}' optelseif optelse

    '{'  shift, and go to state 167

    stmtlist  go to state 677


state 626

  311 senslist: senslist ',' varname .

    $default  reduce using rule 311 (senslist)


state 627

  364 tablst1: tablst1 . ',' Name
  366 dependlst: DEPEND tablst1 .

    ','  shift, and go to state 559

    $default  reduce using rule 366 (dependlst)


state 628

  359 tablestmt: TABLE tablst dependlst FROM . expr TO expr WITH INTEGER

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 678
    funccall  go to state 420


state 629

  364 tablst1: tablst1 ',' Name .

    $default  reduce using rule 364 (tablst1)


state 630

  254 pareqn: '~' DEL NAME '[' . firstlast ']' '=' expr

    FIRST  shift, and go to state 631
    LAST   shift, and go to state 632

    firstlast  go to state 679


state 631

  256 firstlast: FIRST .

    $default  reduce using rule 256 (firstlast)


state 632

  257 firstlast: LAST .

    $default  reduce using rule 257 (firstlast)


state 633

  255 pareqn: '~' NAME '[' firstlast . ']' '=' expr

    ']'  shift, and go to state 680


state 634

  253 pareqn: '~' PRIME '=' NAME . '*' DEL2 '(' NAME ')' '+' NAME

    '*'  shift, and go to state 681


state 635

  333 lagstmt: LAG name BY NAME .

    $default  reduce using rule 333 (lagstmt)


state 636

  343 match: error .

    $default  reduce using rule 343 (match)


state 637

  341 match: name .
  344 matchname: name .
  345          | name . '[' NAME ']'

    '['  shift, and go to state 682

    '('       reduce using rule 344 (matchname)
    $default  reduce using rule 341 (match)


state 638

  338 matchblk: MATCH @41 '{' matchlist . '}'
  340 matchlist: matchlist . match

    error  shift, and go to state 636
    '}'    shift, and go to state 683
    NAME   shift, and go to state 51
    PRIME  shift, and go to state 52

    Name       go to state 53
    name       go to state 637
    match      go to state 684
    matchname  go to state 640


state 639

  339 matchlist: match .

    $default  reduce using rule 339 (matchlist)


state 640

  342 match: matchname . '(' expr ')' '=' expr

    '('  shift, and go to state 685


state 641

  313 conserve: CONSERVE @37 react '=' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 686
    funccall  go to state 420


state 642

  316 compart: COMPARTMENT NAME ',' @38 . expr '{' namelist '}'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 687
    funccall  go to state 420


state 643

  321 namelist: NAME .

    $default  reduce using rule 321 (namelist)


state 644

  317 compart: COMPARTMENT expr '{' namelist . '}'
  322 namelist: namelist . NAME

    '}'   shift, and go to state 688
    NAME  shift, and go to state 689


state 645

  319 ldifus: LONGDIFUS NAME ',' @39 . expr '{' namelist '}'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 690
    funccall  go to state 420


state 646

  320 ldifus: LONGDIFUS expr '{' namelist . '}'
  322 namelist: namelist . NAME

    '}'   shift, and go to state 691
    NAME  shift, and go to state 689


state 647

  300 aexpr: '(' aexpr . ')'
  301      | aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr

    ')'  shift, and go to state 692
    '+'  shift, and go to state 650
    '*'  shift, and go to state 651
    '-'  shift, and go to state 652
    '/'  shift, and go to state 653
    '^'  shift, and go to state 654


state 648

  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr
  306      | '-' aexpr .

    '^'  shift, and go to state 654

    $default  reduce using rule 306 (aexpr)


state 649

  298 aexpr: real units .

    $default  reduce using rule 298 (aexpr)


state 650

  301 aexpr: aexpr '+' . aexpr

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 693


state 651

  303 aexpr: aexpr '*' . aexpr

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 694


state 652

  302 aexpr: aexpr '-' . aexpr

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 695


state 653

  304 aexpr: aexpr '/' . aexpr

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 696


state 654

  305 aexpr: aexpr '^' . aexpr

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 697


state 655

  292 watchdir: GT .

    $default  reduce using rule 292 (watchdir)


state 656

  293 watchdir: LT .

    $default  reduce using rule 293 (watchdir)


state 657

  291 watch1: '(' aexpr watchdir . aexpr ')' real

    error       shift, and go to state 570
    '('         shift, and go to state 571
    '-'         shift, and go to state 572
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 573
    varname   go to state 574
    funccall  go to state 575
    aexpr     go to state 698


state 658

  295 fornetcon: FOR_NETCONS '(' arglist ')' . @36 stmtlist '}'

    $default  reduce using rule 294 (@36)

    @36  go to state 699


state 659

  131 conducthint: CONDUCTANCE Name USEION NAME .

    $default  reduce using rule 131 (conducthint)


state 660

  332 react: react '+' integer . varname

    NAME   shift, and go to state 449
    PRIME  shift, and go to state 52

    Name     go to state 53
    name     go to state 326
    varname  go to state 700


state 661

  331 react: react '+' varname .

    $default  reduce using rule 331 (react)


state 662

  327 reaction: REACTION react '-' GT . '(' expr ')'

    '('  shift, and go to state 701


state 663

  326 reaction: REACTION react LT LT . '(' expr ')'

    '('  shift, and go to state 702


state 664

  325 reaction: REACTION react REACT1 @40 . react '(' expr ',' expr ')'

    NAME        shift, and go to state 449
    PRIME       shift, and go to state 52
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 53
    name     go to state 326
    integer  go to state 497
    varname  go to state 498
    react    go to state 703


state 665

  260 funcblk: FUNCTION1 NAME '(' arglist ')' units @33 stmtlist '}' .

    $default  reduce using rule 260 (funcblk)


state 666

   66 indepdef: NAME FROM number TO number withby integer opstart units .

    $default  reduce using rule 66 (indepdef)


state 667

   75 depdef: name FROM number TO number opstart units abstol .

    $default  reduce using rule 75 (depdef)


state 668

   76 depdef: name '[' integer ']' FROM number TO number . opstart units abstol

    START1  shift, and go to state 262

    $default  reduce using rule 78 (opstart)

    opstart  go to state 704


state 669

  231 exprlist: exprlist ',' STRING .

    $default  reduce using rule 231 (exprlist)


state 670

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  230 exprlist: exprlist ',' expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 230 (exprlist)


state 671

  181 varname: NAME '@' integer '[' intexpr ']' .

    $default  reduce using rule 181 (varname)


state 672

  272 solveblk: SOLVE NAME USING METHOD ifsolerr .

    $default  reduce using rule 272 (solveblk)


state 673

  275 ifsolerr: IFERROR stmtlist '}' .

    $default  reduce using rule 275 (ifsolerr)


state 674

  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr
  233 fromstmt: FROM NAME @30 '=' intexpr . TO intexpr opinc stmtlist '}'

    TO   shift, and go to state 705
    '+'  shift, and go to state 544
    '*'  shift, and go to state 545
    '-'  shift, and go to state 546
    '/'  shift, and go to state 547


state 675

  238 forallstmt: FORALL1 NAME @31 stmtlist '}' .

    $default  reduce using rule 238 (forallstmt)


state 676

  240 whilestmt: WHILE '(' expr ')' stmtlist . '}'

    '}'  shift, and go to state 706


state 677

  241 ifstmt: IF '(' expr ')' stmtlist . '}' optelseif optelse

    '}'  shift, and go to state 707


state 678

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  359 tablestmt: TABLE tablst dependlst FROM expr . TO expr WITH INTEGER

    TO   shift, and go to state 708
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 679

  254 pareqn: '~' DEL NAME '[' firstlast . ']' '=' expr

    ']'  shift, and go to state 709


state 680

  255 pareqn: '~' NAME '[' firstlast ']' . '=' expr

    '='  shift, and go to state 710


state 681

  253 pareqn: '~' PRIME '=' NAME '*' . DEL2 '(' NAME ')' '+' NAME

    DEL2  shift, and go to state 711


state 682

  345 matchname: name '[' . NAME ']'

    NAME  shift, and go to state 712


state 683

  338 matchblk: MATCH @41 '{' matchlist '}' .

    $default  reduce using rule 338 (matchblk)


state 684

  340 matchlist: matchlist match .

    $default  reduce using rule 340 (matchlist)


state 685

  342 match: matchname '(' . expr ')' '=' expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 713
    funccall  go to state 420


state 686

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  313 conserve: CONSERVE @37 react '=' expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 313 (conserve)


state 687

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  316 compart: COMPARTMENT NAME ',' @38 expr . '{' namelist '}'

    '{'  shift, and go to state 714
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 688

  317 compart: COMPARTMENT expr '{' namelist '}' .

    $default  reduce using rule 317 (compart)


state 689

  322 namelist: namelist NAME .

    $default  reduce using rule 322 (namelist)


state 690

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  319 ldifus: LONGDIFUS NAME ',' @39 expr . '{' namelist '}'

    '{'  shift, and go to state 715
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 691

  320 ldifus: LONGDIFUS expr '{' namelist '}' .

    $default  reduce using rule 320 (ldifus)


state 692

  300 aexpr: '(' aexpr ')' .

    $default  reduce using rule 300 (aexpr)


state 693

  301 aexpr: aexpr . '+' aexpr
  301      | aexpr '+' aexpr .
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr

    '*'  shift, and go to state 651
    '/'  shift, and go to state 653
    '^'  shift, and go to state 654

    $default  reduce using rule 301 (aexpr)


state 694

  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  303      | aexpr '*' aexpr .
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr

    '^'  shift, and go to state 654

    $default  reduce using rule 303 (aexpr)


state 695

  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  302      | aexpr '-' aexpr .
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr

    '*'  shift, and go to state 651
    '/'  shift, and go to state 653
    '^'  shift, and go to state 654

    $default  reduce using rule 302 (aexpr)


state 696

  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  304      | aexpr '/' aexpr .
  305      | aexpr . '^' aexpr

    '^'  shift, and go to state 654

    $default  reduce using rule 304 (aexpr)


state 697

  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr
  305      | aexpr '^' aexpr .

    '^'  shift, and go to state 654

    $default  reduce using rule 305 (aexpr)


state 698

  291 watch1: '(' aexpr watchdir aexpr . ')' real
  301 aexpr: aexpr . '+' aexpr
  302      | aexpr . '-' aexpr
  303      | aexpr . '*' aexpr
  304      | aexpr . '/' aexpr
  305      | aexpr . '^' aexpr

    ')'  shift, and go to state 716
    '+'  shift, and go to state 650
    '*'  shift, and go to state 651
    '-'  shift, and go to state 652
    '/'  shift, and go to state 653
    '^'  shift, and go to state 654


state 699

  295 fornetcon: FOR_NETCONS '(' arglist ')' @36 . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 717


state 700

  332 react: react '+' integer varname .

    $default  reduce using rule 332 (react)


state 701

  327 reaction: REACTION react '-' GT '(' . expr ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 718
    funccall  go to state 420


state 702

  326 reaction: REACTION react LT LT '(' . expr ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 719
    funccall  go to state 420


state 703

  325 reaction: REACTION react REACT1 @40 react . '(' expr ',' expr ')'
  331 react: react . '+' varname
  332      | react . '+' integer varname

    '('  shift, and go to state 720
    '+'  shift, and go to state 581


state 704

   76 depdef: name '[' integer ']' FROM number TO number opstart . units abstol

    '('  shift, and go to state 150

    $default  reduce using rule 37 (units)

    units  go to state 721
    unit   go to state 204


state 705

  233 fromstmt: FROM NAME @30 '=' intexpr TO . intexpr opinc stmtlist '}'

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 722


state 706

  240 whilestmt: WHILE '(' expr ')' stmtlist '}' .

    $default  reduce using rule 240 (whilestmt)


state 707

  241 ifstmt: IF '(' expr ')' stmtlist '}' . optelseif optelse

    $default  reduce using rule 242 (optelseif)

    optelseif  go to state 723


state 708

  359 tablestmt: TABLE tablst dependlst FROM expr TO . expr WITH INTEGER

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 724
    funccall  go to state 420


state 709

  254 pareqn: '~' DEL NAME '[' firstlast ']' . '=' expr

    '='  shift, and go to state 725


state 710

  255 pareqn: '~' NAME '[' firstlast ']' '=' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 726
    funccall  go to state 420


state 711

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 . '(' NAME ')' '+' NAME

    '('  shift, and go to state 727


state 712

  345 matchname: name '[' NAME . ']'

    ']'  shift, and go to state 728


state 713

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  342 match: matchname '(' expr . ')' '=' expr

    ')'  shift, and go to state 729
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 714

  316 compart: COMPARTMENT NAME ',' @38 expr '{' . namelist '}'

    NAME  shift, and go to state 643

    namelist  go to state 730


state 715

  319 ldifus: LONGDIFUS NAME ',' @39 expr '{' . namelist '}'

    NAME  shift, and go to state 643

    namelist  go to state 731


state 716

  291 watch1: '(' aexpr watchdir aexpr ')' . real

    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    integer  go to state 276
    real     go to state 732


state 717

  295 fornetcon: FOR_NETCONS '(' arglist ')' @36 stmtlist . '}'

    '}'  shift, and go to state 733


state 718

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  327 reaction: REACTION react '-' GT '(' expr . ')'

    ')'  shift, and go to state 734
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 719

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  326 reaction: REACTION react LT LT '(' expr . ')'

    ')'  shift, and go to state 735
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 720

  325 reaction: REACTION react REACT1 @40 react '(' . expr ',' expr ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 736
    funccall  go to state 420


state 721

   76 depdef: name '[' integer ']' FROM number TO number opstart units . abstol

    LT  shift, and go to state 348

    $default  reduce using rule 80 (abstol)

    abstol  go to state 737


state 722

  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr
  233 fromstmt: FROM NAME @30 '=' intexpr TO intexpr . opinc stmtlist '}'

    BY   shift, and go to state 738
    '+'  shift, and go to state 544
    '*'  shift, and go to state 545
    '-'  shift, and go to state 546
    '/'  shift, and go to state 547

    $default  reduce using rule 235 (opinc)

    opinc  go to state 739


state 723

  241 ifstmt: IF '(' expr ')' stmtlist '}' optelseif . optelse
  243 optelseif: optelseif . ELSE IF '(' expr ')' stmtlist '}'

    ELSE  shift, and go to state 740

    $default  reduce using rule 244 (optelse)

    optelse  go to state 741


state 724

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  359 tablestmt: TABLE tablst dependlst FROM expr TO expr . WITH INTEGER

    WITH  shift, and go to state 742
    '+'   shift, and go to state 505
    '*'   shift, and go to state 506
    '-'   shift, and go to state 507
    '/'   shift, and go to state 508
    '^'   shift, and go to state 510
    OR    shift, and go to state 511
    AND   shift, and go to state 512
    GT    shift, and go to state 513
    LT    shift, and go to state 514
    LE    shift, and go to state 515
    EQ    shift, and go to state 516
    NE    shift, and go to state 517
    GE    shift, and go to state 518


state 725

  254 pareqn: '~' DEL NAME '[' firstlast ']' '=' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 743
    funccall  go to state 420


state 726

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  255 pareqn: '~' NAME '[' firstlast ']' '=' expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 255 (pareqn)


state 727

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 '(' . NAME ')' '+' NAME

    NAME  shift, and go to state 744


state 728

  345 matchname: name '[' NAME ']' .

    $default  reduce using rule 345 (matchname)


state 729

  342 match: matchname '(' expr ')' . '=' expr

    '='  shift, and go to state 745


state 730

  316 compart: COMPARTMENT NAME ',' @38 expr '{' namelist . '}'
  322 namelist: namelist . NAME

    '}'   shift, and go to state 746
    NAME  shift, and go to state 689


state 731

  319 ldifus: LONGDIFUS NAME ',' @39 expr '{' namelist . '}'
  322 namelist: namelist . NAME

    '}'   shift, and go to state 747
    NAME  shift, and go to state 689


state 732

  291 watch1: '(' aexpr watchdir aexpr ')' real .

    $default  reduce using rule 291 (watch1)


state 733

  295 fornetcon: FOR_NETCONS '(' arglist ')' @36 stmtlist '}' .

    $default  reduce using rule 295 (fornetcon)


state 734

  327 reaction: REACTION react '-' GT '(' expr ')' .

    $default  reduce using rule 327 (reaction)


state 735

  326 reaction: REACTION react LT LT '(' expr ')' .

    $default  reduce using rule 326 (reaction)


state 736

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  325 reaction: REACTION react REACT1 @40 react '(' expr . ',' expr ')'

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    ','  shift, and go to state 748
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 737

   76 depdef: name '[' integer ']' FROM number TO number opstart units abstol .

    $default  reduce using rule 76 (depdef)


state 738

  236 opinc: BY . intexpr

    error       shift, and go to state 453
    '('         shift, and go to state 454
    NAME        shift, and go to state 51
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name     go to state 455
    integer  go to state 456
    intexpr  go to state 749


state 739

  233 fromstmt: FROM NAME @30 '=' intexpr TO intexpr opinc . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 750


state 740

  243 optelseif: optelseif ELSE . IF '(' expr ')' stmtlist '}'
  245 optelse: ELSE . stmtlist '}'

    IF   shift, and go to state 751
    '{'  shift, and go to state 167

    stmtlist  go to state 752


state 741

  241 ifstmt: IF '(' expr ')' stmtlist '}' optelseif optelse .

    $default  reduce using rule 241 (ifstmt)


state 742

  359 tablestmt: TABLE tablst dependlst FROM expr TO expr WITH . INTEGER

    INTEGER  shift, and go to state 753


state 743

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  254 pareqn: '~' DEL NAME '[' firstlast ']' '=' expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 254 (pareqn)


state 744

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 '(' NAME . ')' '+' NAME

    ')'  shift, and go to state 754


state 745

  342 match: matchname '(' expr ')' '=' . expr

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 755
    funccall  go to state 420


state 746

  316 compart: COMPARTMENT NAME ',' @38 expr '{' namelist '}' .

    $default  reduce using rule 316 (compart)


state 747

  319 ldifus: LONGDIFUS NAME ',' @39 expr '{' namelist '}' .

    $default  reduce using rule 319 (ldifus)


state 748

  325 reaction: REACTION react REACT1 @40 react '(' expr ',' . expr ')'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 756
    funccall  go to state 420


state 749

  185 intexpr: intexpr . '+' intexpr
  186        | intexpr . '-' intexpr
  187        | intexpr . '*' intexpr
  188        | intexpr . '/' intexpr
  236 opinc: BY intexpr .

    '+'  shift, and go to state 544
    '*'  shift, and go to state 545
    '-'  shift, and go to state 546
    '/'  shift, and go to state 547

    $default  reduce using rule 236 (opinc)


state 750

  233 fromstmt: FROM NAME @30 '=' intexpr TO intexpr opinc stmtlist . '}'

    '}'  shift, and go to state 757


state 751

  243 optelseif: optelseif ELSE IF . '(' expr ')' stmtlist '}'

    '('  shift, and go to state 758


state 752

  245 optelse: ELSE stmtlist . '}'

    '}'  shift, and go to state 759


state 753

  359 tablestmt: TABLE tablst dependlst FROM expr TO expr WITH INTEGER .

    $default  reduce using rule 359 (tablestmt)


state 754

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 '(' NAME ')' . '+' NAME

    '+'  shift, and go to state 760


state 755

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  342 match: matchname '(' expr ')' '=' expr .

    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518

    $default  reduce using rule 342 (match)


state 756

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  325 reaction: REACTION react REACT1 @40 react '(' expr ',' expr . ')'

    ')'  shift, and go to state 761
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 757

  233 fromstmt: FROM NAME @30 '=' intexpr TO intexpr opinc stmtlist '}' .

    $default  reduce using rule 233 (fromstmt)


state 758

  243 optelseif: optelseif ELSE IF '(' . expr ')' stmtlist '}'

    error       shift, and go to state 413
    '('         shift, and go to state 414
    '-'         shift, and go to state 415
    NOT         shift, and go to state 416
    NAME        shift, and go to state 325
    PRIME       shift, and go to state 52
    REAL        shift, and go to state 274
    INTEGER     shift, and go to state 205
    DEFINEDVAR  shift, and go to state 206

    Name      go to state 53
    name      go to state 326
    integer   go to state 276
    real      go to state 417
    varname   go to state 418
    expr      go to state 762
    funccall  go to state 420


state 759

  245 optelse: ELSE stmtlist '}' .

    $default  reduce using rule 245 (optelse)


state 760

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 '(' NAME ')' '+' . NAME

    NAME  shift, and go to state 763


state 761

  325 reaction: REACTION react REACT1 @40 react '(' expr ',' expr ')' .

    $default  reduce using rule 325 (reaction)


state 762

  194 expr: expr . '+' expr
  195     | expr . '-' expr
  196     | expr . '*' expr
  197     | expr . '/' expr
  198     | expr . '^' expr
  199     | expr . OR expr
  200     | expr . AND expr
  201     | expr . GT expr
  202     | expr . LT expr
  203     | expr . GE expr
  204     | expr . LE expr
  205     | expr . EQ expr
  206     | expr . NE expr
  243 optelseif: optelseif ELSE IF '(' expr . ')' stmtlist '}'

    ')'  shift, and go to state 764
    '+'  shift, and go to state 505
    '*'  shift, and go to state 506
    '-'  shift, and go to state 507
    '/'  shift, and go to state 508
    '^'  shift, and go to state 510
    OR   shift, and go to state 511
    AND  shift, and go to state 512
    GT   shift, and go to state 513
    LT   shift, and go to state 514
    LE   shift, and go to state 515
    EQ   shift, and go to state 516
    NE   shift, and go to state 517
    GE   shift, and go to state 518


state 763

  253 pareqn: '~' PRIME '=' NAME '*' DEL2 '(' NAME ')' '+' NAME .

    $default  reduce using rule 253 (pareqn)


state 764

  243 optelseif: optelseif ELSE IF '(' expr ')' . stmtlist '}'

    '{'  shift, and go to state 167

    stmtlist  go to state 765


state 765

  243 optelseif: optelseif ELSE IF '(' expr ')' stmtlist . '}'

    '}'  shift, and go to state 766


state 766

  243 optelseif: optelseif ELSE IF '(' expr ')' stmtlist '}' .

    $default  reduce using rule 243 (optelseif)
